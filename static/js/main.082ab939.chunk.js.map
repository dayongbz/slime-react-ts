{"version":3,"sources":["components/Dot.tsx","tools/getWidthHeight.tsx","components/CanvasImg.tsx","components/CanvasImgWrapper.tsx","components/Profile.tsx","components/ProfileWrapper.tsx","tools/getDotsCount.tsx","components/ModalPopup.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Dot","memo","ctx","name","wrapperSize","event","useState","dots","setDots","dotRef","useRef","onEvent","useCallback","current","classList","contains","offsetWidth","remove","add","useEffect","dot","x","offsetLeft","y","offsetTop","offsetHeight","colorData","getImageData","data","style","backgroundColor","target","addEventListener","once","ref","className","map","item","key","toString","getWidthHeight","img","screenSize","width","height","maxWidth","maxHeight","ratio","result","padding","Math","floor","CanvasImg","dispatch","canvasRef","imgRef","setCanvas","canvas","getContext","drawImage","size","type","onLoad","e","alt","src","CanvasImgWrapper","member","id","Profile","select","onClick","modalPopup","title","description","functions","args","initDotsCount","backgroundImage","ProfileWrapper","getDotsCount","dotSize","ceil","ModalPopup","onCancel","value","initialState","imgCtx","dotWrapperSize","reducer","state","action","slice","i","length","App","useReducer","memberRef","dotWrapperRef","dotSubWrapperRef","eventRef","CustomEvent","onReSize","document","documentElement","clientWidth","clientHeight","onTouchMove","touches","push","elementFromPoint","clientX","clientY","dispatchEvent","dotsCount","imgWidth","imgHeight","dotWrapper","dotSubWrapper","setDotWrapper","makeInitDots","window","index","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.082ab939.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState, memo, useCallback } from \"react\";\n\nconst Dot = memo(({ ctx, name, wrapperSize, event }: any) => {\n  const [dots, setDots] = useState<Array<any>>([]);\n  const dotRef = useRef<HTMLDivElement>(null);\n\n  const onEvent = useCallback(() => {\n    // element what has dot class remove dot class then add wrapper class\n    if (\n      dotRef.current?.classList.contains(\"dot\") &&\n      dotRef.current.offsetWidth / 2 >= 5\n    ) {\n      dotRef.current?.classList.remove(\"dot\");\n      dotRef.current?.classList.add(\"wrapper\");\n      setDots([1, 2, 3, 4]);\n    }\n  }, []);\n\n  useEffect(() => {\n    // init dot setting\n    if (dotRef.current && ctx && wrapperSize) {\n      const dot = dotRef.current;\n      let x = dot.offsetLeft + dot.offsetWidth / 2,\n        y = dot.offsetTop + dot.offsetHeight / 2;\n      x = x < 0 ? 0 : x >= wrapperSize[0] ? wrapperSize[0] - 1 : x;\n      y = y < 0 ? 0 : y >= wrapperSize[1] ? wrapperSize[1] - 1 : y;\n      const colorData = ctx.getImageData(x, y, 1, 1).data;\n      dot.style.backgroundColor = `rgb(${colorData[0]},${colorData[1]},${colorData[2]})`;\n    }\n  }, [ctx, name, wrapperSize]);\n\n  useEffect(() => {\n    const target = dotRef.current;\n    target?.addEventListener(\"mouseenter\", onEvent, { once: true });\n    target?.addEventListener(\"division\", onEvent, { once: true });\n  }, [onEvent]);\n\n  return (\n    <div ref={dotRef} className=\"dot\">\n      {dots.map((item) => {\n        return (\n          <Dot\n            key={item.toString()}\n            ctx={ctx}\n            name={name}\n            event={event}\n            wrapperSize={wrapperSize}\n          />\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Dot;\n","const getWidthHeight = (img: HTMLImageElement, screenSize: any): any => {\n  let { width, height } = img;\n  let [maxWidth, maxHeight] = screenSize;\n  const ratio = width >= height ? width / height : height / width;\n  const profileHeight = 125;\n  const padding = 10;\n  const result: any = { width: 0, height: 0 };\n  maxWidth = maxWidth - padding * 2;\n  maxHeight = maxHeight - padding * 2 - profileHeight;\n  if (width >= height) {\n    result.width = maxWidth;\n    result.height = maxWidth / ratio;\n    if (result.height > maxHeight) {\n      result.width = maxWidth - (result.height - maxHeight) * ratio;\n      result.height = maxHeight;\n    }\n  } else {\n    result.width = maxHeight / ratio;\n    result.height = maxHeight;\n    if (result.width > maxWidth) {\n      result.height = maxHeight - (result.width - maxWidth) * ratio;\n      result.width = maxWidth;\n    }\n  }\n  return {\n    width: Math.floor(result.width),\n    height: Math.floor(result.height),\n  };\n};\n\nexport default getWidthHeight;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport getWidthHeight from \"../tools/getWidthHeight\";\n\nconst CanvasImg = memo(({ name, screenSize, dispatch }: any) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  const setCanvas = (\n    // set canvas size and draw image and return ctx\n    canvas: HTMLCanvasElement,\n    img: HTMLImageElement,\n    width: number,\n    height: number\n  ): CanvasRenderingContext2D => {\n    const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    canvas.width = width;\n    canvas.height = height;\n    ctx.drawImage(img, 0, 0, width, height);\n    return ctx;\n  };\n\n  const onLoad = (e: any) => {\n    if (canvasRef.current && e.target) {\n      const canvas = canvasRef.current as HTMLCanvasElement;\n      const img = e.target;\n      const size = getWidthHeight(img, screenSize);\n      const ctx = setCanvas(canvas, img, size.width, size.height);\n      dispatch({ type: \"SET_IMG_CTX\", name, ctx, img });\n    }\n  };\n\n  useEffect(() => {\n    if (canvasRef.current && imgRef.current) {\n      const canvas = canvasRef.current as HTMLCanvasElement;\n      const img = imgRef.current;\n      const size = getWidthHeight(img, screenSize);\n      const ctx = setCanvas(canvas, img, size.width, size.height);\n      dispatch({ type: \"SET_IMG_CTX\", name, ctx, img });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [screenSize, name]);\n\n  return (\n    <div className={`${name}-wrapper`}>\n      <img\n        ref={imgRef}\n        onLoad={onLoad}\n        className={name}\n        alt={name}\n        src={`./img/${name}.jpg`}\n      />\n      <canvas ref={canvasRef} className={name}></canvas>\n    </div>\n  );\n});\n\nexport default CanvasImg;\n","import React, { memo } from \"react\";\nimport CanvasImg from \"./CanvasImg\";\n\nconst CanvasImgWrapper = memo(({ member, screenSize, dispatch }: any) => {\n  return (\n    <div id=\"canvas-wrapper\">\n      {member.map((item: string) => {\n        return (\n          <CanvasImg\n            name={item}\n            key={item}\n            screenSize={screenSize}\n            dispatch={dispatch}\n          />\n        );\n      })}\n    </div>\n  );\n});\n\nexport default CanvasImgWrapper;\n","import React, { memo } from \"react\";\n\nconst Profile = memo(({ name, dispatch, select }: any) => {\n  const onClick = (e: any) => {\n    if (!select) {\n      dispatch({\n        type: \"SET_MODAL_POPUP\",\n        modalPopup: {\n          title: \"경고\",\n          description: \"지금까지 작업한 내용들이 초기화됩니다.\",\n          functions: [dispatch, dispatch],\n          args: [\n            {\n              type: \"SET_INIT_DOTS_COUNT\",\n              initDotsCount: [],\n            },\n            { type: \"SET_NAME\", name },\n          ],\n        },\n      });\n    }\n  };\n  return (\n    <>\n      <div\n        onClick={onClick}\n        className={select ? \"profile selected\" : \"profile\"}\n        style={{ backgroundImage: `url(./img/${name}.jpg)` }}\n      ></div>\n    </>\n  );\n});\n\nexport default Profile;\n","import React, { memo } from \"react\";\nimport Profile from \"./Profile\";\n\nconst ProfileWrapper = memo(({ member, dispatch, name }: any) => {\n  return (\n    <div id=\"profile-wrapper\">\n      <div id=\"profile-slide\">\n        {member.map((item: any) => (\n          <Profile\n            name={item}\n            key={item}\n            dispatch={dispatch}\n            select={item === name}\n          ></Profile>\n        ))}\n      </div>\n    </div>\n  );\n});\n\nexport default ProfileWrapper;\n","const getDotsCount = (size: any, dotSize: number): number => {\n  const { height } = size;\n  return Math.ceil(height / dotSize) * 2;\n};\n\nexport default getDotsCount;\n","import React, { memo } from \"react\";\n\nconst ModalPopup = memo(({ title, description, dispatch }: any) => {\n  const onCancel = () => {\n    dispatch({\n      type: \"CANCEL_MODAL_POPUP\",\n    });\n  };\n\n  const onOk = () => {\n    dispatch({\n      type: \"OK_MODAL_POPUP\",\n    });\n  };\n  return (\n    <div id=\"modal-popup-wrapper\">\n      <div className=\"modal-popup\">\n        <div className=\"title-wrapper\">\n          <p className=\"title\">{title}</p>\n        </div>\n        <div className=\"description-wrapper\">\n          <p className=\"sub\">{description}</p>\n        </div>\n        <div className=\"button-wrapper\">\n          <input type=\"button\" value=\"예\" onClick={onOk} />\n          <input type=\"button\" value=\"아니오\" onClick={onCancel} />\n        </div>\n      </div>\n      <div className=\"background\" onClick={onCancel}></div>\n    </div>\n  );\n});\n\nexport default ModalPopup;\n","import React, { useRef, memo, useEffect, useReducer } from \"react\";\nimport \"./reset.css\";\nimport \"./App.css\";\nimport Dot from \"./components/Dot\";\nimport CanvasImgWrapper from \"./components/CanvasImgWrapper\";\nimport ProfileWrapper from \"./components/ProfileWrapper\";\nimport getWidthHeight from \"./tools/getWidthHeight\";\nimport getDotsCount from \"./tools/getDotsCount\";\nimport ModalPopup from \"./components/ModalPopup\";\n\nconst initialState = {\n  name: \"kimchaewon\",\n  imgCtx: {},\n  screenSize: [0, 0],\n  dotWrapperSize: [0, 0],\n  initDotsCount: [],\n  modalPopup: [],\n};\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"SET_NAME\":\n      return { ...state, name: action.name };\n    case \"SET_IMG_CTX\":\n      return {\n        ...state,\n        imgCtx: {\n          ...state.imgCtx,\n          [action.name]: { ctx: action.ctx, img: action.img },\n        },\n      };\n    case \"SET_SCREEN_SIZE\":\n      return { ...state, screenSize: [...action.size] };\n    case \"SET_DOT_WRAPPER_SIZE\":\n      return { ...state, dotWrapperSize: [...action.size] };\n    case \"SET_INIT_DOTS_COUNT\":\n      return { ...state, initDotsCount: [...action.initDotsCount] };\n    case \"SET_MODAL_POPUP\":\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup, { ...action.modalPopup }],\n      };\n    case \"CANCEL_MODAL_POPUP\":\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup.slice(1)],\n      };\n    case \"OK_MODAL_POPUP\":\n      for (let i = 0; i < state.modalPopup[0].functions.length; i++) {\n        state.modalPopup[0].functions[i](state.modalPopup[0].args[i]);\n      }\n\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup.slice(1)],\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst App = memo(() => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const memberRef = useRef<Array<string>>([\n    \"kwoneunbi\",\n    \"sakura\",\n    \"kanghyewon\",\n    \"choiyena\",\n    \"leechaeyeon\",\n    \"kimchaewon\",\n    \"kimminju\",\n    \"nako\",\n    \"hitomi\",\n    \"joyuri\",\n    \"anyujin\",\n    \"jangwonyoung\",\n  ]);\n  const dotWrapperRef = useRef<HTMLDivElement>(null);\n  const dotSubWrapperRef = useRef<HTMLDivElement>(null);\n  const eventRef = useRef<Event>(new CustomEvent(\"division\"));\n\n  const setDotWrapper = (imgWidth: number, imgHeight: number) => {\n    // set dot-wrapper size\n    if (dotWrapperRef.current && dotSubWrapperRef.current) {\n      const dotWrapper = dotWrapperRef.current;\n      const dotSubWrapper = dotSubWrapperRef.current;\n      dotWrapper.style.width = `${imgWidth}px`;\n      dotWrapper.style.height = `${imgHeight}px`;\n\n      dotSubWrapper.style.width = `${imgWidth}px`;\n      dotSubWrapper.style.height = `${imgWidth}px`;\n      dispatch({\n        type: \"SET_DOT_WRAPPER_SIZE\",\n        size: [imgWidth, imgHeight],\n      });\n    }\n  };\n\n  const makeInitDots = (dotsCount: number) => {\n    const initDotsCount = [];\n    for (let i = 0; i < dotsCount; i++) {\n      initDotsCount.push(i);\n    }\n    dispatch({\n      type: \"SET_INIT_DOTS_COUNT\",\n      initDotsCount,\n    });\n  };\n\n  const onReSize = () => {\n    dispatch({\n      type: \"SET_SCREEN_SIZE\",\n      size: [\n        document.documentElement.clientWidth,\n        document.documentElement.clientHeight,\n      ],\n    });\n  };\n\n  const onTouchMove = (e: any) => {\n    const dots = [];\n    for (let i = 0; i < e.touches.length; i++) {\n      dots.push(\n        document.elementFromPoint(e.touches[i].clientX, e.touches[i].clientY)\n      );\n    }\n    for (let i = 0; i < dots.length; i++) {\n      const dot = dots[i];\n      if (dot && dot.classList.contains(\"dot\")) {\n        dot.dispatchEvent(eventRef.current);\n        dot.classList.add(\"hello\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (state.imgCtx[state.name]) {\n      const img = state.imgCtx[state.name].img;\n      const size = getWidthHeight(img, state.screenSize);\n      const dotsCount = getDotsCount(size, size.width / 2);\n      setDotWrapper(size.width, size.height);\n      makeInitDots(dotsCount);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.imgCtx[state.name], state.name, state.screenSize]);\n\n  useEffect(() => {\n    // when document is loaded, set screenSize state at once\n    onReSize();\n    window.addEventListener(\"resize\", onReSize);\n    window.addEventListener(\"touchmove\", onTouchMove);\n  }, []);\n\n  return (\n    <>\n      <CanvasImgWrapper\n        member={memberRef.current}\n        screenSize={state.screenSize}\n        dispatch={dispatch}\n      />\n      <div\n        id=\"main-wrapper\"\n        style={{ height: `${document.documentElement.clientHeight - 125}px` }}\n      >\n        <div ref={dotWrapperRef} id=\"dot-wrapper\">\n          <div ref={dotSubWrapperRef} id=\"dot-subwrapper\">\n            {state.initDotsCount.map((item: any, index: number) => (\n              <Dot\n                ctx={state.imgCtx[state.name].ctx}\n                key={item.toString()}\n                name={state.name}\n                index={index}\n                event={eventRef.current}\n                wrapperSize={state.dotWrapperSize}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <ProfileWrapper\n        member={memberRef.current}\n        dispatch={dispatch}\n        name={state.name}\n      />\n      {state.modalPopup\n        ? state.modalPopup.map((item: any, index: any) => (\n            <ModalPopup\n              title={item.title}\n              description={item.description}\n              dispatch={dispatch}\n              key={item.title + index}\n            />\n          ))\n        : null}\n      {/* <ModalPopup title={\"경고\"} description={\"hello\"} /> */}\n    </>\n  );\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}