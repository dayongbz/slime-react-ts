{"version":3,"sources":["components/Profile.tsx","wrapper/ProfileWrapper.tsx","tools/getWidthHeight.tsx","components/CanvasImg.tsx","wrapper/CanvasWrapper.tsx","components/Dot.tsx","tools/getDotsCount.tsx","wrapper/MainWrapper.tsx","components/ModalPopup.tsx","reducer/state.tsx","reducer/reducer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Profile","memo","name","dispatch","type","group","img","sub","depth","selected","useState","loaded","setLoaded","useEffect","imgLoad","Image","onload","src","className","onClick","select","alt","status","modalPopup","title","description","functions","args","initDotsCount","style","backgroundImage","ProfileWrapper","selectedProfile","profile","dataJson","selectedImg","profileWrapperRef","useRef","current","scrollTo","id","ref","length","names","map","item","key","member","imgs","getWidthHeight","screenSize","width","height","maxWidth","maxHeight","ratio","result","padding","document","documentElement","clientWidth","Math","floor","CanvasImg","canvasRef","imgRef","setCanvas","canvas","ctx","getContext","drawImage","imgT","size","onLoad","e","target","CanvasWrapper","Dot","wrapperSize","event","maxDepth","dots","setDots","dotRef","onEvent","useCallback","classList","remove","add","getCoord","element","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","contains","addEventListener","once","removeEventListener","dot","coord","colorData","getImageData","data","backgroundColor","toString","getDotsCount","dotSize","ceil","MainWrapper","imgCtx","eventRef","dotWrapperSize","dotWrapperRef","dotSubWrapperRef","makeInitDots","dotsCount","i","push","setDotWrapper","dotWrapper","dotSubWrapper","ModalPopup","onCancel","value","initialState","imgCtxArr","reducer","state","action","slice","imgCtxARR","App","useReducer","CustomEvent","timeRef","onReSize","clientHeight","onTouchMove","touches","elementFromPoint","clientX","clientY","dispatchEvent","onMouseMove","window","clearTimeout","setTimeout","index","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kwCA0HeA,G,cAxHCC,gBACd,YAAsE,IAAnEC,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAoB,EACvCC,oBAAS,GAD8B,mBAC5DC,EAD4D,KACpDC,EADoD,KAuEnE,OAdAC,qBAAU,WAER,IAAMC,EAAU,IAAIC,MACpBD,EAAQE,OAAS,WACfJ,GAAU,IAEZE,EAAQG,IACG,SAATb,EAAA,gBACaC,EADb,gBAEa,UAATD,EAAA,gBACSC,EADT,YACkBH,EADlB,0BAESG,EAFT,YAEkBH,EAFlB,YAE0BI,KAC/B,CAACF,EAAMC,EAAOH,EAAMI,IAGrB,oCACY,SAATF,EACC,yBAAKc,UAAU,OAAOC,QAhCR,WAElB,OADAhB,EAAS,CAAEC,KAAM,iBACTI,GACN,KAAK,EACHL,EAAS,CAAEC,KAAM,uBAAwBgB,OAAQ,UACjD,MACF,KAAK,EAGL,QACEjB,EAAS,CAAEC,KAAM,uBAAwBgB,OAAQ,YAuB/C,yBACEH,IAAI,2CACJI,IAAI,8BAGNV,EACF,yBACEQ,QA/EQ,WACD,SAATf,IACFD,EAAS,CAAEC,KAAM,uBAAwBgB,OAAQ,UACjDjB,EAAS,CAAEC,KAAM,cAAekB,OAAQjB,KAE7B,UAATD,IACFD,EAAS,CAAEC,KAAM,uBAAwBgB,OAAQ,WACjDjB,EAAS,CAAEC,KAAM,cAAekB,OAAQpB,KAE7B,WAATE,GAAsBK,GACxBN,EAAS,CACPC,KAAM,kBACNmB,WAAY,CACVC,MAAO,eACPC,YAAa,6GACbC,UAAW,CAACvB,EAAUA,EAAUA,EAAUA,EAAUA,GACpDwB,KAAM,CACJ,CACEvB,KAAM,mBACNF,OACAG,QACAC,OAEF,CACEF,KAAM,sBACNwB,cAAe,IAEjB,CAAExB,KAAM,YAAaC,SACrB,CAAED,KAAM,WAAYF,QACpB,CACEE,KAAM,UACNE,YAiDJY,UACW,SAATd,EACI,gBACAK,EACA,mBACA,WAGLA,GACC,oCACE,yBAAKS,UAAU,SACf,uBAAGA,UAAU,gBAAb,aAGJ,yBACEA,UAAU,aACVW,MACW,SAATzB,EACI,CAAE0B,gBAAgB,aAAD,OAAezB,EAAf,kBACR,UAATD,EACA,CAAE0B,gBAAgB,aAAD,OAAezB,EAAf,YAAwBH,EAAxB,YACjB,CAAE4B,gBAAgB,aAAD,OAAezB,EAAf,YAAwBH,EAAxB,YAAgCI,EAAhC,QAGxBC,GAAO,uBAAGW,UAAU,OAAOX,IAG9B,yBAAKW,UAAU,mBACb,yBAAKD,IAAI,4BAA4BI,IAAI,kBC/CtCU,EAhEQ9B,gBACrB,YAAyE,IAAtE+B,EAAqE,EAArEA,gBAAiB7B,EAAoD,EAApDA,SAAU8B,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,YACzCC,EAAoBC,iBAAuB,MAOjD,OALAxB,qBAAU,WAAO,IAAD,EAEd,UAAAuB,EAAkBE,eAAlB,SAA2BC,SAAS,EAAG,KACtC,CAACN,IAGF,yBAAKO,GAAG,kBAAkBC,IAAKL,GAC7B,yBAAKI,GAAG,iBACe,SAApBR,GACC,kBAAC,EAAD,CAAS5B,KAAK,OAAOD,SAAUA,EAAUK,MAAOyB,EAAQS,SAErC,SAApBV,EACGE,EAASS,MAAMC,KAAI,SACjBC,GADiB,OAGjB,kBAAC,EAAD,CACExC,MAAOwC,EACPC,IAAKD,EACLzC,KAAM,OACND,SAAUA,EACVI,IAAKsC,OAGW,UAApBb,EACAE,EAASD,EAAQ,IAAIc,OAAOH,KAAI,SAC9BC,GAD8B,OAG9B,kBAAC,EAAD,CACExC,MAAO4B,EAAQ,GACf/B,KAAM2C,EACNC,IAAKD,EACLzC,KAAM,QACND,SAAUA,EACV6C,KAAMd,EAASD,EAAQ,IAAIe,KAAKH,GAChCtC,IAAKsC,OAGTX,EAASD,EAAQ,IAAIe,KAAKf,EAAQ,IAC/BW,KAAI,SAACC,GAAD,OACH,kBAAC,EAAD,CACE3C,KAAM+B,EAAQ,GACd3B,IAAKuC,EACLxC,MAAO4B,EAAQ,GACfa,IAAKD,EACLzC,KAAM,SACNK,SACE0B,EAAYA,EAAYO,OAAS,GAAGxC,OAAS+B,EAAQ,IACrDE,EAAYA,EAAYO,OAAS,GAAGrC,QAClC4B,EAAQ,IACVE,EAAYA,EAAYO,OAAS,GAAGpC,MAAQuC,EAE9C1C,SAAUA,YC5Bf8C,EA9BQ,SAAC3C,EAAuB4C,GAA0B,IACjEC,EAAkB7C,EAAlB6C,MAAOC,EAAW9C,EAAX8C,OADyD,cAE1CF,EAF0C,GAEjEG,EAFiE,KAEvDC,EAFuD,KAGhEC,EAAQJ,GAASC,EAASD,EAAQC,EAASA,EAASD,EAGpDK,EAAc,CAAEL,MAAO,EAAGC,OAAQ,GAkBxC,OAjBAC,GAAsBI,GACtBH,EAAYA,EAAYG,IAJFC,SAASC,gBAAgBC,YAAc,IAAM,IAAM,IAKrET,GAASC,GACXI,EAAOL,MAAQE,EACfG,EAAOJ,OAASC,EAAWE,EACvBC,EAAOJ,OAASE,IAClBE,EAAOL,MAAQE,GAAYG,EAAOJ,OAASE,GAAaC,EACxDC,EAAOJ,OAASE,KAGlBE,EAAOL,MAAQG,EAAYC,EAC3BC,EAAOJ,OAASE,EACZE,EAAOL,MAAQE,IACjBG,EAAOJ,OAASE,GAAaE,EAAOL,MAAQE,GAAYE,EACxDC,EAAOL,MAAQE,IAGZ,CACLF,MAAOU,KAAKC,MAAMN,EAAOL,OACzBC,OAAQS,KAAKC,MAAMN,EAAOJ,UCyCfW,EAhEG9D,gBAAK,YAAsD,IAAnDC,EAAkD,EAAlDA,KAAMG,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,IAAK4C,EAAgC,EAAhCA,WAAY/C,EAAoB,EAApBA,SAChD6D,EAAY3B,iBAA0B,MACtC4B,EAAS5B,iBAAyB,MAElC6B,EAAY,SAEhBC,EACA7D,EACA6C,EACAC,GAEA,IAAMgB,EAAMD,EAAOE,WAAW,MAI9B,OAHAF,EAAOhB,MAAQA,EACfgB,EAAOf,OAASA,EAChBgB,EAAIE,UAAUhE,EAAK,EAAG,EAAG6C,EAAOC,GACzBgB,GAmCT,OAhBAvD,qBAAU,WAER,GAAImD,EAAU1B,SAAW2B,EAAO3B,QAAS,CACvC,IAAM6B,EAASH,EAAU1B,QACnBiC,EAAON,EAAO3B,QACdkC,EAAOvB,EAAesB,EAAMrB,GAC5BkB,EAAMF,EAAUC,EAAQI,EAAMC,EAAKrB,MAAOqB,EAAKpB,QACrDjD,EAAS,CACPC,KAAM,cACNF,KAAK,GAAD,OAAKG,EAAL,YAAcH,EAAd,YAAsBI,GAC1B8D,MACA9D,IAAKiE,OAGR,CAACpE,EAAUE,EAAOC,EAAKJ,EAAMgD,IAG9B,yBAAKhC,UAAS,UAAKhB,EAAL,aACZ,yBACEuC,IAAKwB,EACLQ,OApCS,SAACC,GAEd,GAAIV,EAAU1B,SAAWoC,EAAEC,OAAQ,CACjC,IAAMR,EAASH,EAAU1B,QACnBiC,EAAOG,EAAEC,OACTH,EAAOvB,EAAesB,EAAMrB,GAC5BkB,EAAMF,EAAUC,EAAQI,EAAMC,EAAKrB,MAAOqB,EAAKpB,QACrDjD,EAAS,CACPC,KAAM,kBACNF,KAAK,GAAD,OAAKG,EAAL,YAAcH,EAAd,YAAsBI,GAC1B8D,MACA9D,IAAKiE,MA0BLrD,UAAS,eAAUZ,EAAV,SACTe,IAAKnB,EACLe,IAAG,gBAAWZ,EAAX,YAAoBH,EAApB,YAA4BI,KAEjC,4BAAQmC,IAAKuB,EAAW9C,UAAWhB,QC1C1B0E,EAjBO3E,gBAAK,YAAiD,IAA9CkC,EAA6C,EAA7CA,YAAae,EAAgC,EAAhCA,WAAY/C,EAAoB,EAApBA,SACrD,OACE,yBAAKqC,GAAG,kBACLL,EAAYS,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,CACE3C,KAAM2C,EAAK3C,KACXG,MAAOwC,EAAKxC,MACZC,IAAKuC,EAAKvC,IACVwC,IAAG,UAAKD,EAAKxC,MAAV,YAAmBwC,EAAK3C,KAAxB,YAAgC2C,EAAKvC,KACxC4C,WAAYA,EACZ/C,SAAUA,WCXd0E,EAAM5E,gBAAK,YAAwD,IAArDmE,EAAoD,EAApDA,IAAKU,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,MAAOvE,EAA2B,EAA3BA,MAAOwE,EAAoB,EAApBA,SAAoB,EAC9CtE,mBAAqB,IADyB,mBAC/DuE,EAD+D,KACzDC,EADyD,KAEhEC,EAAS9C,iBAAuB,MAEhC+C,EAAUC,uBAAY,SAACX,GAE3BA,EAAEC,OAAOW,UAAUC,OAAO,OAC1Bb,EAAEC,OAAOW,UAAUE,IAAI,WACvBN,EAAQ,CAAC,EAAG,EAAG,EAAG,MACjB,IAEGO,EAAWJ,uBACf,SAACK,GACC,IAAIC,EAAID,EAAQE,WAAaF,EAAQG,YAAc,EACjDC,EAAIJ,EAAQK,UAAYL,EAAQM,aAAe,EAGjD,MAAO,CAFPL,EAAIA,EAAI,EAAI,EAAIA,GAAKb,EAAY,GAAKA,EAAY,GAAK,EAAIa,EAC3DG,EAAIA,EAAI,EAAI,EAAIA,GAAKhB,EAAY,GAAKA,EAAY,GAAK,EAAIgB,KAG7D,CAAChB,IAuCH,OApCAjE,qBAAU,WAER,IAAM8D,EAASQ,EAAO7C,QAChBhB,EAAM,OAAGqD,QAAH,IAAGA,OAAH,EAAGA,EAAQW,UAAUW,SAAS,OAI1C,OAHItB,GAAUrD,GAAUd,EAAQwE,GAC9BL,EAAOuB,iBAAiB,WAAYd,EAAS,CAAEe,MAAM,IAEhD,WAEC,OAANxB,QAAM,IAANA,KAAQyB,oBAAoB,WAAYhB,MAEzC,CAACA,EAAS5E,EAAOwE,IAEpBnE,qBAAU,WAER,IAAM8D,EAASQ,EAAO7C,QAClB9B,GAASwE,IAAT,OAAqBL,QAArB,IAAqBA,OAArB,EAAqBA,EAAQW,UAAUW,SAAS,cAClDf,EAAQ,IACRP,EAAOW,UAAUE,IAAI,OACrBb,EAAOW,UAAUC,OAAO,cAEzB,CAAC/E,EAAOwE,IAEXnE,qBAAU,WAAO,IAAD,EAEd,IACE,UAAAsE,EAAO7C,eAAP,eAAgBgD,UAAUW,SAAS,UAClCd,EAAO7C,QAAQgD,UAAUW,SAAS,WACnC,CACA,IAAMI,EAAMlB,EAAO7C,QACbgE,EAAQb,EAASY,GACjBE,EAAYnC,EAAIoC,aAAaF,EAAM,GAAIA,EAAM,GAAI,EAAG,GAAGG,KAC7DJ,EAAIxE,MAAM6E,gBAAV,cAAmCH,EAAU,GAA7C,YAAmDA,EAAU,GAA7D,YAAmEA,EAAU,GAA7E,QAED,CAACnC,EAAKqB,IAGP,yBAAKhD,IAAK0C,EAAQjE,UAAU,OACzB+D,GACCA,EAAKrC,KAAI,SAACC,GACR,OACE,kBAACgC,EAAD,CACE/B,IAAKD,EAAK8D,WACVvC,IAAKA,EACLW,MAAOA,EACPD,YAAaA,EACbtE,MAAOA,EAAQ,EACfwE,SAAUA,WAQTH,IC1EA+B,EALM,SAACpC,EAAWqC,GAA6B,IACpDzD,EAAWoB,EAAXpB,OACR,OAAqC,EAA9BS,KAAKiD,KAAK1D,EAASyD,ICyFbE,EArFK9G,gBAClB,YAQY,IAPViD,EAOS,EAPTA,WACAtB,EAMS,EANTA,cACAoF,EAKS,EALTA,OACAC,EAIS,EAJTA,SACAC,EAGS,EAHTA,eACAlC,EAES,EAFTA,SACA7E,EACS,EADTA,SAEMgH,EAAgB9E,iBAAuB,MACvC+E,EAAmB/E,iBAAuB,MAE1CgF,EAAehC,uBACnB,SAACiC,GAGC,IADA,IAAM1F,EAAgB,GACb2F,EAAI,EAAGA,EAAID,EAAWC,IAC7B3F,EAAc4F,KAAKD,GAErBpH,EAAS,CACPC,KAAM,sBACNwB,oBAGJ,CAACzB,IAGGsH,EAAgBpC,uBAAY,SAAClC,EAAeC,GAEhD,GAAI+D,EAAc7E,SAAW8E,EAAiB9E,QAAS,CACrD,IAAMoF,EAAaP,EAAc7E,QAC3BqF,EAAgBP,EAAiB9E,QACvCoF,EAAW7F,MAAMsB,MAAjB,UAA4BA,EAA5B,MACAuE,EAAW7F,MAAMuB,OAAjB,UAA6BA,EAA7B,MAEAuE,EAAc9F,MAAMsB,MAApB,UAA+BA,EAA/B,MACAwE,EAAc9F,MAAMuB,OAApB,UAAgCD,EAAhC,MACAhD,EAAS,CACPC,KAAM,uBACNoE,KAAM,CAACrB,EAAOC,QAIjB,IAaH,OAXAvC,qBAAU,WAER,GAAImG,EAAQ,CACV,IAAM1G,EAAM0G,EAAO1G,IACbkE,EAAOvB,EAAe3C,EAAK4C,GAC3BoE,EAAYV,EAAapC,EAAMA,EAAKrB,MAAQ,GAClDsE,EAAcjD,EAAKrB,MAAOqB,EAAKpB,QAC/BiE,EAAaC,MAEd,CAACpE,EAAY8D,EAAQS,EAAeJ,IAGrC,yBACE7E,GAAG,eACHX,MAAO,CACLuB,OAAO,GAAD,OACJF,EAAW,IAAMA,EAAW,GAAK,IAAM,IAAM,IADzC,QAKR,yBAAKT,IAAK0E,EAAe3E,GAAG,eAC1B,yBAAKC,IAAK2E,EAAkB5E,GAAG,kBAC5BZ,EAAcgB,KAAI,SAACC,GAAD,OACjB,kBAAC,EAAD,CACEuB,IAAK4C,EAAO5C,IACZtB,IAAKD,EAAK8D,WACV5B,MAAOkC,EACPnC,YAAaoC,EACb1G,MAAO,EACPwE,SAAUA,aChDX4C,EA/BI3H,gBAAK,YAA4C,IAAzCuB,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,YAAatB,EAAoB,EAApBA,SACvC0H,EAAW,WACf1H,EAAS,CACPC,KAAM,wBASV,OACE,yBAAKoC,GAAG,uBACN,yBAAKtB,UAAU,eACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,SAASM,IAExB,yBAAKN,UAAU,uBACb,uBAAGA,UAAU,OAAOO,IAEtB,yBAAKP,UAAU,kBACb,2BAAOd,KAAK,SAAS0H,MAAM,SAAI3G,QAf1B,WACXhB,EAAS,CACPC,KAAM,sBAcF,2BAAOA,KAAK,SAAS0H,MAAM,qBAAM3G,QAAS0G,MAG9C,yBAAK3G,UAAU,aAAaC,QAAS0G,QCR5BE,EAlBM,CAEnB7H,KAAM,QACNgC,S,OACA7B,MAAO,QACPC,IAAK,QACL0B,gBAAiB,OACjBC,QAAS,GACTE,YAAa,CAAC,CAAE9B,MAAO,QAASH,KAAM,QAASI,IAAK,UACpD0G,OAAQ,KACRgB,UAAW,GACX9E,WAAY,GACZgE,eAAgB,GAChBtF,cAAe,GACfL,WAAY,GACZyD,SAAU,G,uBCoDGiD,EArEC,SAACC,EAAYC,GAE3B,OAAQA,EAAO/H,MACb,IAAK,cACH,OAAO,2BAAK8H,GAAZ,IAAmBjG,QAAQ,GAAD,mBAAMiG,EAAMjG,SAAZ,CAAqBkG,EAAO7G,WACxD,IAAK,eACH,OAAO,2BAAK4G,GAAZ,IAAmBjG,QAAQ,YAAKiG,EAAMjG,QAAQmG,MAAM,GAAI,MAC1D,IAAK,WACH,OAAO,2BAAKF,GAAZ,IAAmBhI,KAAMiI,EAAOjI,OAClC,IAAK,YACH,OAAO,2BAAKgI,GAAZ,IAAmB7H,MAAO8H,EAAO9H,QACnC,IAAK,UACH,OAAO,2BAAK6H,GAAZ,IAAmB5H,IAAK6H,EAAO7H,MACjC,IAAK,kBACH,OAAO,2BACF4H,GADL,IAEElB,OAAQ,CAAE5C,IAAK+D,EAAO/D,IAAK9D,IAAK6H,EAAO7H,KACvC+H,UAAU,2BACLH,EAAMlB,QADF,kBAENmB,EAAOjI,KAAO,CAAEkE,IAAK+D,EAAO/D,IAAK9D,IAAK6H,EAAO7H,SAGpD,IAAK,kBACH,OAAO,2BAAK4H,GAAZ,IAAmBhF,WAAW,YAAKiF,EAAO3D,QAC5C,IAAK,uBACH,OAAO,2BAAK0D,GAAZ,IAAmBhB,eAAe,YAAKiB,EAAO3D,QAChD,IAAK,sBACH,OAAO,2BAAK0D,GAAZ,IAAmBtG,cAAc,YAAKuG,EAAOvG,iBAC/C,IAAK,kBACH,OAAO,2BACFsG,GADL,IAEE3G,WAAW,GAAD,mBAAM2G,EAAM3G,YAAZ,gBAA6B4G,EAAO5G,gBAElD,IAAK,qBACH,OAAO,2BACF2G,GADL,IAEE3G,WAAW,YAAK2G,EAAM3G,WAAW6G,MAAM,MAE3C,IAAK,iBACH,IAAK,IAAIb,EAAI,EAAGA,EAAIW,EAAM3G,WAAW,GAAGG,UAAUgB,OAAQ6E,IACxDW,EAAM3G,WAAW,GAAGG,UAAU6F,GAAGW,EAAM3G,WAAW,GAAGI,KAAK4F,IAE5D,OAAO,2BACFW,GADL,IAEE3G,WAAW,YAAK2G,EAAM3G,WAAW6G,MAAM,MAE3C,IAAK,mBACH,OAAO,2BACFF,GADL,IAEE/F,YAAY,GAAD,mBACN+F,EAAM/F,aADA,CAET,CAAEjC,KAAMiI,EAAOjI,KAAMG,MAAO8H,EAAO9H,MAAOC,IAAK6H,EAAO7H,SAG5D,IAAK,gBACH,OAAO,2BACF4H,GADL,IAEElD,SAAUmD,EAAO3H,QAErB,IAAK,uBACH,OAAO,2BACF0H,GADL,IAEElG,gBAAiBmG,EAAO/G,SAE5B,QACE,OAAO8G,IC8CEI,EApGHrI,gBAAK,WAAO,IAAD,EACKsI,qBAAWN,EAASF,GADzB,mBACdG,EADc,KACP/H,EADO,KAEf8G,EAAW5E,iBAAc,IAAImG,YAAY,aACzCC,EAAUpG,iBAAY,GAEtBqG,EAAWrD,uBAAY,WAE3BlF,EAAS,CACPC,KAAM,kBACNoE,KAAM,CACJd,SAASC,gBAAgBC,YACzBF,SAASC,gBAAgBgF,kBAG5B,IAEGC,EAAcvD,uBAAY,SAACX,GAG/B,IADA,IAAMO,EAAO,GACJsC,EAAI,EAAGA,EAAI7C,EAAEmE,QAAQnG,OAAQ6E,IACpCtC,EAAKuC,KACH9D,SAASoF,iBAAiBpE,EAAEmE,QAAQtB,GAAGwB,QAASrE,EAAEmE,QAAQtB,GAAGyB,UAGjE,IAAK,IAAIzB,EAAI,EAAGA,EAAItC,EAAKvC,OAAQ6E,IAAK,CACpC,IAAMlB,EAAMpB,EAAKsC,GACblB,GAAOA,EAAIf,UAAUW,SAAS,QAChCI,EAAI4C,cAAchC,EAAS3E,YAG9B,IAEG4G,EAAc7D,uBAAY,SAACX,GAC/B,IAAM2B,EAAM3C,SAASoF,iBAAiBpE,EAAEqE,QAASrE,EAAEsE,SAC/C3C,GAAOA,EAAIf,UAAUW,SAAS,QAChCI,EAAI4C,cAAchC,EAAS3E,WAE5B,IAuBH,OArBAzB,qBAAU,WAEJqH,EAAMhB,eAAe,GAAK,IAC5B/G,EAAS,CAAEC,KAAM,gBAAiBI,MAAO,IAChC0H,EAAMhB,eAAe,IAAM,KACpC/G,EAAS,CAAEC,KAAM,gBAAiBI,MAAO,MAE1C,CAAC0H,EAAMhB,iBAEVrG,qBAAU,WAER6H,IAKAS,OAAOjD,iBAAiB,UAJF,WACpBuC,EAAQnG,SAAW8G,aAAaX,EAAQnG,SACxCmG,EAAQnG,QAAU+G,WAAWX,EAAU,QAGzCS,OAAOjD,iBAAiB,YAAa0C,GACrCO,OAAOjD,iBAAiB,YAAagD,KACpC,CAACA,EAAaR,EAAUE,IAGzB,oCACE,kBAAC,EAAD,CACEzG,YAAa+F,EAAM/F,YACnBe,WAAYgF,EAAMhF,WAClB/C,SAAUA,IAEZ,kBAAC,EAAD,CACE+C,WAAYgF,EAAMhF,WAClBtB,cAAesG,EAAMtG,cACrBoF,OAAQkB,EAAMlB,OACdC,SAAUA,EAAS3E,QACnB4E,eAAgBgB,EAAMhB,eACtBlC,SAAUkD,EAAMlD,SAChB7E,SAAUA,IAEZ,kBAAC,EAAD,CACE6B,gBAAiBkG,EAAMlG,gBACvB7B,SAAUA,EACV8B,QAASiG,EAAMjG,QACfC,SAAUgG,EAAMhG,SAChBC,YAAa+F,EAAM/F,cAEpB+F,EAAM3G,WACH2G,EAAM3G,WAAWqB,KAAI,SACnBC,EACAyG,GAFmB,OAInB,kBAAC,EAAD,CACE9H,MAAOqB,EAAKrB,MACZC,YAAaoB,EAAKpB,YAClBtB,SAAUA,EACV2C,IAAKD,EAAKrB,MAAQ8H,OAGtB,SC9FUC,QACW,cAA7BJ,OAAOK,SAASC,UAEe,UAA7BN,OAAOK,SAASC,UAEhBN,OAAOK,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnG,SAASoG,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.52005460.chunk.js","sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\n\nconst Profile = memo(\n  ({ name, dispatch, type, group, img, sub, depth, selected }: any) => {\n    const [loaded, setLoaded] = useState(false);\n\n    const onClick = () => {\n      if (type === \"home\") {\n        dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"group\" });\n        dispatch({ type: \"SET_PROFILE\", status: group });\n      }\n      if (type === \"group\") {\n        dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"member\" });\n        dispatch({ type: \"SET_PROFILE\", status: name });\n      }\n      if (type === \"member\" && !selected) {\n        dispatch({\n          type: \"SET_MODAL_POPUP\",\n          modalPopup: {\n            title: \"경고\",\n            description: \"지금까지 작업한 내용들이 초기화됩니다.\",\n            functions: [dispatch, dispatch, dispatch, dispatch, dispatch],\n            args: [\n              {\n                type: \"ADD_SELECTED_IMG\",\n                name,\n                group,\n                img,\n              },\n              {\n                type: \"SET_INIT_DOTS_COUNT\",\n                initDotsCount: [],\n              },\n              { type: \"SET_GROUP\", group },\n              { type: \"SET_NAME\", name },\n              {\n                type: \"SET_IMG\",\n                img,\n              },\n            ],\n          },\n        });\n      }\n    };\n\n    const onClickPrev = () => {\n      dispatch({ type: \"PREV_PROFILE\" });\n      switch (depth) {\n        case 2:\n          dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"group\" });\n          break;\n        case 1:\n          dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"home\" });\n          break;\n        default:\n          dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"home\" });\n          break;\n      }\n    };\n\n    useEffect(() => {\n      // Before loading show loading bar.\n      const imgLoad = new Image();\n      imgLoad.onload = function () {\n        setLoaded(true);\n      };\n      imgLoad.src =\n        type === \"home\"\n          ? `./img/${group}/group/0.jpg`\n          : type === \"group\"\n          ? `./img/${group}/${name}/0.jpg`\n          : `./img/${group}/${name}/${img}`;\n    }, [type, group, name, img]);\n\n    return (\n      <>\n        {type === \"prev\" ? (\n          <div className=\"prev\" onClick={onClickPrev}>\n            <img\n              src=\"./img/keyboard_arrow_left-white-18dp.svg\"\n              alt=\"이전으로\"\n            />\n          </div>\n        ) : loaded ? (\n          <div\n            onClick={onClick}\n            className={\n              type === \"home\"\n                ? \"profile group\"\n                : selected\n                ? \"profile selected\"\n                : \"profile\"\n            }\n          >\n            {selected && (\n              <>\n                <div className=\"icon\"></div>\n                <p className=\"selectedText\">selected</p>\n              </>\n            )}\n            <div\n              className=\"background\"\n              style={\n                type === \"home\"\n                  ? { backgroundImage: `url(./img/${group}/group/0.jpg)` }\n                  : type === \"group\"\n                  ? { backgroundImage: `url(./img/${group}/${name}/0.jpg)` }\n                  : { backgroundImage: `url(./img/${group}/${name}/${img})` }\n              }\n            ></div>\n            {sub && <p className=\"sub\">{sub}</p>}\n          </div>\n        ) : (\n          <div className=\"profile loading\">\n            <img src=\"./img/loop-white-18dp.svg\" alt=\"loading\" />\n          </div>\n        )}\n      </>\n    );\n  }\n);\n\nexport default Profile;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport Profile from \"../components/Profile\";\n\nconst ProfileWrapper = memo(\n  ({ selectedProfile, dispatch, profile, dataJson, selectedImg }: any) => {\n    const profileWrapperRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      // when click profile, rest profile wrapper scrollbar\n      profileWrapperRef.current?.scrollTo(0, 0);\n    }, [profile]);\n\n    return (\n      <div id=\"profile-wrapper\" ref={profileWrapperRef}>\n        <div id=\"profile-slide\">\n          {selectedProfile !== \"home\" && ( // If selectedProfile state is not home then profile-slide has prev button\n            <Profile type=\"prev\" dispatch={dispatch} depth={profile.length} />\n          )}\n          {selectedProfile === \"home\"\n            ? dataJson.names.map((\n                item: any // If selectedprofile state is home then Profile component show group icon\n              ) => (\n                <Profile\n                  group={item}\n                  key={item}\n                  type={\"home\"}\n                  dispatch={dispatch}\n                  sub={item}\n                ></Profile>\n              ))\n            : selectedProfile === \"group\"\n            ? dataJson[profile[0]].member.map((\n                item: any // If selectedprofile state is group then Profile component show member icon\n              ) => (\n                <Profile\n                  group={profile[0]}\n                  name={item}\n                  key={item}\n                  type={\"group\"}\n                  dispatch={dispatch}\n                  imgs={dataJson[profile[0]].imgs[item]}\n                  sub={item}\n                />\n              ))\n            : dataJson[profile[0]].imgs[profile[1]] // If selectedprofile state is member then Profile component show person img\n                .map((item: any) => (\n                  <Profile\n                    name={profile[1]}\n                    img={item}\n                    group={profile[0]}\n                    key={item}\n                    type={\"member\"}\n                    selected={\n                      selectedImg[selectedImg.length - 1].name === profile[1] &&\n                      selectedImg[selectedImg.length - 1].group ===\n                        profile[0] &&\n                      selectedImg[selectedImg.length - 1].img === item\n                    }\n                    dispatch={dispatch}\n                  />\n                ))}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default ProfileWrapper;\n","const getWidthHeight = (img: HTMLImageElement, screenSize: any): any => {\n  let { width, height } = img;\n  let [maxWidth, maxHeight] = screenSize;\n  const ratio = width >= height ? width / height : height / width;\n  const profileHeight = document.documentElement.clientWidth > 600 ? 125 : 80;\n  const padding = 10;\n  const result: any = { width: 0, height: 0 };\n  maxWidth = maxWidth - padding * 2;\n  maxHeight = maxHeight - padding * 2 - profileHeight;\n  if (width >= height) {\n    result.width = maxWidth;\n    result.height = maxWidth / ratio;\n    if (result.height > maxHeight) {\n      result.width = maxWidth - (result.height - maxHeight) * ratio;\n      result.height = maxHeight;\n    }\n  } else {\n    result.width = maxHeight / ratio;\n    result.height = maxHeight;\n    if (result.width > maxWidth) {\n      result.height = maxHeight - (result.width - maxWidth) * ratio;\n      result.width = maxWidth;\n    }\n  }\n  return {\n    width: Math.floor(result.width),\n    height: Math.floor(result.height),\n  };\n};\n\nexport default getWidthHeight;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport getWidthHeight from \"../tools/getWidthHeight\";\n\nconst CanvasImg = memo(({ name, group, img, screenSize, dispatch }: any) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  const setCanvas = (\n    // set canvas size and draw image and return ctx\n    canvas: HTMLCanvasElement,\n    img: HTMLImageElement,\n    width: number,\n    height: number\n  ): CanvasRenderingContext2D => {\n    const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    canvas.width = width;\n    canvas.height = height;\n    ctx.drawImage(img, 0, 0, width, height);\n    return ctx;\n  };\n\n  const onLoad = (e: any) => {\n    // when img element loaded, dispatch Img ctx arr state.\n    if (canvasRef.current && e.target) {\n      const canvas = canvasRef.current as HTMLCanvasElement;\n      const imgT = e.target;\n      const size = getWidthHeight(imgT, screenSize);\n      const ctx = setCanvas(canvas, imgT, size.width, size.height);\n      dispatch({\n        type: \"SET_IMG_CTX_ARR\",\n        name: `${group}/${name}/${img}`,\n        ctx,\n        img: imgT,\n      });\n    }\n  };\n\n  useEffect(() => {\n    // dispatch Img ctx arr state.\n    if (canvasRef.current && imgRef.current) {\n      const canvas = canvasRef.current as HTMLCanvasElement;\n      const imgT = imgRef.current;\n      const size = getWidthHeight(imgT, screenSize);\n      const ctx = setCanvas(canvas, imgT, size.width, size.height);\n      dispatch({\n        type: \"SET_IMG_CTX\",\n        name: `${group}/${name}/${img}`,\n        ctx,\n        img: imgT,\n      });\n    }\n  }, [dispatch, group, img, name, screenSize]);\n\n  return (\n    <div className={`${name}-wrapper`}>\n      <img\n        ref={imgRef}\n        onLoad={onLoad}\n        className={`name/${img} none`}\n        alt={name}\n        src={`./img/${group}/${name}/${img}`}\n      />\n      <canvas ref={canvasRef} className={name}></canvas>\n    </div>\n  );\n});\n\nexport default CanvasImg;\n","import React, { memo } from \"react\";\nimport CanvasImg from \"../components/CanvasImg\";\n\nconst CanvasWrapper = memo(({ selectedImg, screenSize, dispatch }: any) => {\n  return (\n    <div id=\"canvas-wrapper\">\n      {selectedImg.map((item: any) => (\n        <CanvasImg\n          name={item.name}\n          group={item.group}\n          img={item.img}\n          key={`${item.group}/${item.name}/${item.img}`}\n          screenSize={screenSize}\n          dispatch={dispatch}\n        />\n      ))}\n    </div>\n  );\n});\n\nexport default CanvasWrapper;\n","import React, { useRef, useEffect, useState, memo, useCallback } from \"react\";\n\nconst Dot = memo(({ ctx, wrapperSize, event, depth, maxDepth }: any) => {\n  const [dots, setDots] = useState<Array<any>>([]);\n  const dotRef = useRef<HTMLDivElement>(null);\n\n  const onEvent = useCallback((e: any) => {\n    // element what has dot class remove dot class then add wrapper class\n    e.target.classList.remove(\"dot\");\n    e.target.classList.add(\"wrapper\");\n    setDots([1, 2, 3, 4]);\n  }, []);\n\n  const getCoord = useCallback(\n    (element: any): any => {\n      let x = element.offsetLeft + element.offsetWidth / 2,\n        y = element.offsetTop + element.offsetHeight / 2;\n      x = x < 0 ? 0 : x >= wrapperSize[0] ? wrapperSize[0] - 1 : x;\n      y = y < 0 ? 0 : y >= wrapperSize[1] ? wrapperSize[1] - 1 : y;\n      return [x, y];\n    },\n    [wrapperSize]\n  );\n\n  useEffect(() => {\n    // add eventlistener\n    const target = dotRef.current;\n    const status = target?.classList.contains(\"dot\");\n    if (target && status && depth < maxDepth) {\n      target.addEventListener(\"division\", onEvent, { once: true });\n    }\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      target?.removeEventListener(\"division\", onEvent);\n    };\n  }, [onEvent, depth, maxDepth]);\n\n  useEffect(() => {\n    // if depth is bigger than maxDepth then reset Dots components\n    const target = dotRef.current;\n    if (depth >= maxDepth && target?.classList.contains(\"wrapper\")) {\n      setDots([]);\n      target.classList.add(\"dot\");\n      target.classList.remove(\"wrapper\");\n    }\n  }, [depth, maxDepth]);\n\n  useEffect(() => {\n    // init dot setting\n    if (\n      dotRef.current?.classList.contains(\"dot\") &&\n      !dotRef.current.classList.contains(\"wrapper\")\n    ) {\n      const dot = dotRef.current;\n      const coord = getCoord(dot);\n      const colorData = ctx.getImageData(coord[0], coord[1], 1, 1).data;\n      dot.style.backgroundColor = `rgb(${colorData[0]},${colorData[1]},${colorData[2]})`;\n    }\n  }, [ctx, getCoord]);\n\n  return (\n    <div ref={dotRef} className=\"dot\">\n      {dots &&\n        dots.map((item) => {\n          return (\n            <Dot\n              key={item.toString()}\n              ctx={ctx}\n              event={event}\n              wrapperSize={wrapperSize}\n              depth={depth + 1}\n              maxDepth={maxDepth}\n            />\n          );\n        })}\n    </div>\n  );\n});\n\nexport default Dot;\n","const getDotsCount = (size: any, dotSize: number): number => {\n  const { height } = size;\n  return Math.ceil(height / dotSize) * 2;\n};\n\nexport default getDotsCount;\n","import React, { memo, useRef, useEffect, useCallback } from \"react\";\nimport Dot from \"../components/Dot\";\n\nimport getWidthHeight from \"../tools/getWidthHeight\";\nimport getDotsCount from \"../tools/getDotsCount\";\n\nconst MainWrapper = memo(\n  ({\n    screenSize,\n    initDotsCount,\n    imgCtx,\n    eventRef,\n    dotWrapperSize,\n    maxDepth,\n    dispatch,\n  }: any) => {\n    const dotWrapperRef = useRef<HTMLDivElement>(null);\n    const dotSubWrapperRef = useRef<HTMLDivElement>(null);\n\n    const makeInitDots = useCallback(\n      (dotsCount: number) => {\n        // set initial dots\n        const initDotsCount = [];\n        for (let i = 0; i < dotsCount; i++) {\n          initDotsCount.push(i);\n        }\n        dispatch({\n          type: \"SET_INIT_DOTS_COUNT\",\n          initDotsCount,\n        });\n      },\n      [dispatch]\n    );\n\n    const setDotWrapper = useCallback((width: number, height: number) => {\n      // set dot-wrapper size\n      if (dotWrapperRef.current && dotSubWrapperRef.current) {\n        const dotWrapper = dotWrapperRef.current;\n        const dotSubWrapper = dotSubWrapperRef.current;\n        dotWrapper.style.width = `${width}px`;\n        dotWrapper.style.height = `${height}px`;\n\n        dotSubWrapper.style.width = `${width}px`;\n        dotSubWrapper.style.height = `${width}px`;\n        dispatch({\n          type: \"SET_DOT_WRAPPER_SIZE\",\n          size: [width, height],\n        });\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n      // call setDotWrapper and makeInitDots for setting dot wrapper size state and initital dots count\n      if (imgCtx) {\n        const img = imgCtx.img;\n        const size = getWidthHeight(img, screenSize);\n        const dotsCount = getDotsCount(size, size.width / 2);\n        setDotWrapper(size.width, size.height);\n        makeInitDots(dotsCount);\n      }\n    }, [screenSize, imgCtx, setDotWrapper, makeInitDots]);\n\n    return (\n      <div\n        id=\"main-wrapper\"\n        style={{\n          height: `${\n            screenSize[1] - (screenSize[0] > 600 ? 125 : 80) // set main wrapper height\n          }px`,\n        }}\n      >\n        <div ref={dotWrapperRef} id=\"dot-wrapper\">\n          <div ref={dotSubWrapperRef} id=\"dot-subwrapper\">\n            {initDotsCount.map((item: any) => (\n              <Dot\n                ctx={imgCtx.ctx}\n                key={item.toString()}\n                event={eventRef}\n                wrapperSize={dotWrapperSize}\n                depth={1}\n                maxDepth={maxDepth}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default MainWrapper;\n","import React, { memo } from \"react\";\n\nconst ModalPopup = memo(({ title, description, dispatch }: any) => {\n  const onCancel = () => {\n    dispatch({\n      type: \"CANCEL_MODAL_POPUP\",\n    });\n  };\n\n  const onOk = () => {\n    dispatch({\n      type: \"OK_MODAL_POPUP\",\n    });\n  };\n  return (\n    <div id=\"modal-popup-wrapper\">\n      <div className=\"modal-popup\">\n        <div className=\"title-wrapper\">\n          <p className=\"title\">{title}</p>\n        </div>\n        <div className=\"description-wrapper\">\n          <p className=\"sub\">{description}</p>\n        </div>\n        <div className=\"button-wrapper\">\n          <input type=\"button\" value=\"예\" onClick={onOk} />\n          <input type=\"button\" value=\"아니오\" onClick={onCancel} />\n        </div>\n      </div>\n      <div className=\"background\" onClick={onCancel}></div>\n    </div>\n  );\n});\n\nexport default ModalPopup;\n","import groupData from \"../data/group.json\";\n\nconst initialState = {\n  // set initial state\n  name: \"group\",\n  dataJson: groupData as { [index: string]: any },\n  group: \"izone\",\n  img: \"0.jpg\",\n  selectedProfile: \"home\",\n  profile: [],\n  selectedImg: [{ group: \"izone\", name: \"group\", img: \"0.jpg\" }],\n  imgCtx: null,\n  imgCtxArr: [],\n  screenSize: [],\n  dotWrapperSize: [],\n  initDotsCount: [],\n  modalPopup: [],\n  maxDepth: 6,\n};\n\nexport default initialState;\n","const reducer = (state: any, action: any) => {\n  // set reducer\n  switch (action.type) {\n    case \"SET_PROFILE\":\n      return { ...state, profile: [...state.profile, action.status] };\n    case \"PREV_PROFILE\":\n      return { ...state, profile: [...state.profile.slice(0, -1)] };\n    case \"SET_NAME\":\n      return { ...state, name: action.name };\n    case \"SET_GROUP\":\n      return { ...state, group: action.group };\n    case \"SET_IMG\":\n      return { ...state, img: action.img };\n    case \"SET_IMG_CTX_ARR\":\n      return {\n        ...state,\n        imgCtx: { ctx: action.ctx, img: action.img },\n        imgCtxARR: {\n          ...state.imgCtx,\n          [action.name]: { ctx: action.ctx, img: action.img },\n        },\n      };\n    case \"SET_SCREEN_SIZE\":\n      return { ...state, screenSize: [...action.size] };\n    case \"SET_DOT_WRAPPER_SIZE\":\n      return { ...state, dotWrapperSize: [...action.size] };\n    case \"SET_INIT_DOTS_COUNT\":\n      return { ...state, initDotsCount: [...action.initDotsCount] };\n    case \"SET_MODAL_POPUP\":\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup, { ...action.modalPopup }],\n      };\n    case \"CANCEL_MODAL_POPUP\":\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup.slice(1)],\n      };\n    case \"OK_MODAL_POPUP\":\n      for (let i = 0; i < state.modalPopup[0].functions.length; i++) {\n        state.modalPopup[0].functions[i](state.modalPopup[0].args[i]);\n      }\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup.slice(1)],\n      };\n    case \"ADD_SELECTED_IMG\":\n      return {\n        ...state,\n        selectedImg: [\n          ...state.selectedImg,\n          { name: action.name, group: action.group, img: action.img },\n        ],\n      };\n    case \"SET_MAX_DEPTH\":\n      return {\n        ...state,\n        maxDepth: action.depth,\n      };\n    case \"SET_SELECTED_PROFILE\":\n      return {\n        ...state,\n        selectedProfile: action.select,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useRef, memo, useEffect, useReducer, useCallback } from \"react\";\nimport \"./reset.css\";\nimport \"./App.css\";\nimport ProfileWrapper from \"./wrapper/ProfileWrapper\";\nimport CanvasWrapper from \"./wrapper/CanvasWrapper\";\nimport MainWrapper from \"./wrapper/MainWrapper\";\n\nimport ModalPopup from \"./components/ModalPopup\";\nimport initialState from \"./reducer/state\";\nimport reducer from \"./reducer/reducer\";\n\nconst App = memo(() => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const eventRef = useRef<Event>(new CustomEvent(\"division\"));\n  const timeRef = useRef<any>(0);\n\n  const onReSize = useCallback(() => {\n    // when window resies, set screen size state\n    dispatch({\n      type: \"SET_SCREEN_SIZE\",\n      size: [\n        document.documentElement.clientWidth,\n        document.documentElement.clientHeight,\n      ],\n    });\n  }, []);\n\n  const onTouchMove = useCallback((e: any) => {\n    // when touches move, dispatch event\n    const dots = [];\n    for (let i = 0; i < e.touches.length; i++) {\n      dots.push(\n        document.elementFromPoint(e.touches[i].clientX, e.touches[i].clientY)\n      );\n    }\n    for (let i = 0; i < dots.length; i++) {\n      const dot = dots[i];\n      if (dot && dot.classList.contains(\"dot\")) {\n        dot.dispatchEvent(eventRef.current);\n      }\n    }\n  }, []);\n\n  const onMouseMove = useCallback((e: any) => {\n    const dot = document.elementFromPoint(e.clientX, e.clientY);\n    if (dot && dot.classList.contains(\"dot\")) {\n      dot.dispatchEvent(eventRef.current);\n    }\n  }, []);\n\n  useEffect(() => {\n    // set max depth state\n    if (state.dotWrapperSize[0] < 600) {\n      dispatch({ type: \"SET_MAX_DEPTH\", depth: 6 });\n    } else if (state.dotWrapperSize[0] >= 600) {\n      dispatch({ type: \"SET_MAX_DEPTH\", depth: 7 });\n    }\n  }, [state.dotWrapperSize]);\n\n  useEffect(() => {\n    // when document is loaded, set screenSize state at once\n    onReSize();\n    const onReSizeDelay = () => {\n      timeRef.current && clearTimeout(timeRef.current);\n      timeRef.current = setTimeout(onReSize, 300);\n    };\n    window.addEventListener(\"resize\", onReSizeDelay);\n    window.addEventListener(\"touchmove\", onTouchMove);\n    window.addEventListener(\"mousemove\", onMouseMove);\n  }, [onMouseMove, onReSize, onTouchMove]);\n\n  return (\n    <>\n      <CanvasWrapper\n        selectedImg={state.selectedImg}\n        screenSize={state.screenSize}\n        dispatch={dispatch}\n      />\n      <MainWrapper\n        screenSize={state.screenSize}\n        initDotsCount={state.initDotsCount}\n        imgCtx={state.imgCtx}\n        eventRef={eventRef.current}\n        dotWrapperSize={state.dotWrapperSize}\n        maxDepth={state.maxDepth}\n        dispatch={dispatch}\n      />\n      <ProfileWrapper\n        selectedProfile={state.selectedProfile}\n        dispatch={dispatch}\n        profile={state.profile}\n        dataJson={state.dataJson}\n        selectedImg={state.selectedImg}\n      />\n      {state.modalPopup\n        ? state.modalPopup.map((\n            item: any,\n            index: any // If modalPopup has value then show ModalPopup component\n          ) => (\n            <ModalPopup\n              title={item.title}\n              description={item.description}\n              dispatch={dispatch}\n              key={item.title + index}\n            />\n          ))\n        : null}\n    </>\n  );\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}