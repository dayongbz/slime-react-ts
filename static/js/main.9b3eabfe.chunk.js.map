{"version":3,"sources":["components/Dot.tsx","tools/getWidthHeight.tsx","tools/getDotsCount.tsx","components/ModalPopup.tsx","components/CanvasImg.tsx","components/Profile.tsx","reducer/state.tsx","reducer/reducer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Dot","memo","ctx","wrapperSize","event","depth","maxDepth","useState","dots","setDots","dotRef","useRef","onEvent","useCallback","e","target","classList","remove","add","getCoord","element","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","useEffect","current","status","contains","addEventListener","once","removeEventListener","dot","coord","colorData","getImageData","data","style","backgroundColor","ref","className","map","item","key","toString","getWidthHeight","img","screenSize","width","height","maxWidth","maxHeight","ratio","result","padding","document","documentElement","clientWidth","Math","floor","getDotsCount","size","dotSize","ceil","ModalPopup","title","description","dispatch","onCancel","type","id","value","onClick","CanvasImg","name","group","canvasRef","imgRef","setCanvas","canvas","getContext","drawImage","imgT","onLoad","alt","src","Profile","sub","selected","loaded","setLoaded","imgLoad","Image","onload","select","modalPopup","functions","args","initDotsCount","backgroundImage","initialState","dataJson","selectedProfile","profile","selectedImg","imgCtx","imgCtxArr","dotWrapperSize","reducer","state","action","slice","imgCtxARR","i","length","App","useReducer","dotWrapperRef","dotSubWrapperRef","profileWrapperRef","eventRef","CustomEvent","timeRef","setDotWrapper","dotWrapper","dotSubWrapper","makeInitDots","dotsCount","push","onReSize","clientHeight","onTouchMove","touches","elementFromPoint","clientX","clientY","dispatchEvent","onMouseMove","getWidthHeightCB","scrollTo","window","clearTimeout","setTimeout","names","member","imgs","index","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9b3eabfe.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState, memo, useCallback } from \"react\";\n\nconst Dot = memo(({ ctx, wrapperSize, event, depth, maxDepth }: any) => {\n  const [dots, setDots] = useState<Array<any>>([]);\n  const dotRef = useRef<HTMLDivElement>(null);\n\n  const onEvent = useCallback((e: any) => {\n    // element what has dot class remove dot class then add wrapper class\n    e.target.classList.remove(\"dot\");\n    e.target.classList.add(\"wrapper\");\n    setDots([1, 2, 3, 4]);\n  }, []);\n\n  const getCoord = useCallback(\n    (element: any): any => {\n      let x = element.offsetLeft + element.offsetWidth / 2,\n        y = element.offsetTop + element.offsetHeight / 2;\n      x = x < 0 ? 0 : x >= wrapperSize[0] ? wrapperSize[0] - 1 : x;\n      y = y < 0 ? 0 : y >= wrapperSize[1] ? wrapperSize[1] - 1 : y;\n      return [x, y];\n    },\n    [wrapperSize]\n  );\n\n  useEffect(() => {\n    // add eventlistener\n    const target = dotRef.current;\n    const status = target?.classList.contains(\"dot\");\n    if (target && status && depth < maxDepth) {\n      target.addEventListener(\"division\", onEvent, { once: true });\n    }\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      if (target && status && depth < maxDepth) {\n        target.removeEventListener(\"division\", onEvent);\n      }\n    };\n  }, [onEvent, depth, maxDepth]);\n\n  useEffect(() => {\n    // if depth is bigger than maxDepth then reset Dots components\n    const target = dotRef.current;\n    if (depth >= maxDepth && target?.classList.contains(\"wrapper\")) {\n      setDots([]);\n      target.classList.add(\"dot\");\n      target.classList.remove(\"wrapper\");\n    }\n  }, [depth, maxDepth]);\n\n  useEffect(() => {\n    // init dot setting\n    if (\n      dotRef.current?.classList.contains(\"dot\") &&\n      !dotRef.current.classList.contains(\"wrapper\")\n    ) {\n      const dot = dotRef.current;\n      const coord = getCoord(dot);\n      const colorData = ctx.getImageData(coord[0], coord[1], 1, 1).data;\n      dot.style.backgroundColor = `rgb(${colorData[0]},${colorData[1]},${colorData[2]})`;\n    }\n  }, [ctx, getCoord]);\n\n  return (\n    <div ref={dotRef} className=\"dot\">\n      {dots &&\n        dots.map((item) => {\n          return (\n            <Dot\n              key={item.toString()}\n              ctx={ctx}\n              event={event}\n              wrapperSize={wrapperSize}\n              depth={depth + 1}\n              maxDepth={maxDepth}\n            />\n          );\n        })}\n    </div>\n  );\n});\n\nexport default Dot;\n","const getWidthHeight = (img: HTMLImageElement, screenSize: any): any => {\n  let { width, height } = img;\n  let [maxWidth, maxHeight] = screenSize;\n  const ratio = width >= height ? width / height : height / width;\n  const profileHeight = document.documentElement.clientWidth > 600 ? 125 : 80;\n  const padding = 10;\n  const result: any = { width: 0, height: 0 };\n  maxWidth = maxWidth - padding * 2;\n  maxHeight = maxHeight - padding * 2 - profileHeight;\n  if (width >= height) {\n    result.width = maxWidth;\n    result.height = maxWidth / ratio;\n    if (result.height > maxHeight) {\n      result.width = maxWidth - (result.height - maxHeight) * ratio;\n      result.height = maxHeight;\n    }\n  } else {\n    result.width = maxHeight / ratio;\n    result.height = maxHeight;\n    if (result.width > maxWidth) {\n      result.height = maxHeight - (result.width - maxWidth) * ratio;\n      result.width = maxWidth;\n    }\n  }\n  return {\n    width: Math.floor(result.width),\n    height: Math.floor(result.height),\n  };\n};\n\nexport default getWidthHeight;\n","const getDotsCount = (size: any, dotSize: number): number => {\n  const { height } = size;\n  return Math.ceil(height / dotSize) * 2;\n};\n\nexport default getDotsCount;\n","import React, { memo } from \"react\";\n\nconst ModalPopup = memo(({ title, description, dispatch }: any) => {\n  const onCancel = () => {\n    dispatch({\n      type: \"CANCEL_MODAL_POPUP\",\n    });\n  };\n\n  const onOk = () => {\n    dispatch({\n      type: \"OK_MODAL_POPUP\",\n    });\n  };\n  return (\n    <div id=\"modal-popup-wrapper\">\n      <div className=\"modal-popup\">\n        <div className=\"title-wrapper\">\n          <p className=\"title\">{title}</p>\n        </div>\n        <div className=\"description-wrapper\">\n          <p className=\"sub\">{description}</p>\n        </div>\n        <div className=\"button-wrapper\">\n          <input type=\"button\" value=\"예\" onClick={onOk} />\n          <input type=\"button\" value=\"아니오\" onClick={onCancel} />\n        </div>\n      </div>\n      <div className=\"background\" onClick={onCancel}></div>\n    </div>\n  );\n});\n\nexport default ModalPopup;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport getWidthHeight from \"../tools/getWidthHeight\";\n\nconst CanvasImg = memo(({ name, group, img, screenSize, dispatch }: any) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  const setCanvas = (\n    // set canvas size and draw image and return ctx\n    canvas: HTMLCanvasElement,\n    img: HTMLImageElement,\n    width: number,\n    height: number\n  ): CanvasRenderingContext2D => {\n    const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    canvas.width = width;\n    canvas.height = height;\n    ctx.drawImage(img, 0, 0, width, height);\n    return ctx;\n  };\n\n  const onLoad = (e: any) => {\n    // when img element loaded, dispatch Img ctx arr state.\n    if (canvasRef.current && e.target) {\n      const canvas = canvasRef.current as HTMLCanvasElement;\n      const imgT = e.target;\n      const size = getWidthHeight(imgT, screenSize);\n      const ctx = setCanvas(canvas, imgT, size.width, size.height);\n      dispatch({\n        type: \"SET_IMG_CTX_ARR\",\n        name: `${group}/${name}/${img}`,\n        ctx,\n        img: imgT,\n      });\n    }\n  };\n\n  useEffect(() => {\n    // dispatch Img ctx arr state.\n    if (canvasRef.current && imgRef.current) {\n      const canvas = canvasRef.current as HTMLCanvasElement;\n      const imgT = imgRef.current;\n      const size = getWidthHeight(imgT, screenSize);\n      const ctx = setCanvas(canvas, imgT, size.width, size.height);\n      dispatch({\n        type: \"SET_IMG_CTX\",\n        name: `${group}/${name}/${img}`,\n        ctx,\n        img: imgT,\n      });\n    }\n  }, [dispatch, group, img, name, screenSize]);\n\n  return (\n    <div className={`${name}-wrapper`}>\n      <img\n        ref={imgRef}\n        onLoad={onLoad}\n        className={`name/${img} none`}\n        alt={name}\n        src={`./img/${group}/${name}/${img}`}\n      />\n      <canvas ref={canvasRef} className={name}></canvas>\n    </div>\n  );\n});\n\nexport default CanvasImg;\n","import React, { memo, useEffect, useState } from \"react\";\n\nconst Profile = memo(\n  ({ name, dispatch, type, group, img, sub, depth, selected }: any) => {\n    const [loaded, setLoaded] = useState(false);\n\n    const onClick = () => {\n      if (type === \"home\") {\n        dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"group\" });\n        dispatch({ type: \"SET_PROFILE\", status: group });\n      }\n      if (type === \"group\") {\n        dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"member\" });\n        dispatch({ type: \"SET_PROFILE\", status: name });\n      }\n      if (type === \"member\" && !selected) {\n        dispatch({\n          type: \"SET_MODAL_POPUP\",\n          modalPopup: {\n            title: \"경고\",\n            description: \"지금까지 작업한 내용들이 초기화됩니다.\",\n            functions: [dispatch, dispatch, dispatch, dispatch, dispatch],\n            args: [\n              {\n                type: \"ADD_SELECTED_IMG\",\n                name,\n                group,\n                img,\n              },\n              {\n                type: \"SET_INIT_DOTS_COUNT\",\n                initDotsCount: [],\n              },\n              { type: \"SET_GROUP\", group },\n              { type: \"SET_NAME\", name },\n              {\n                type: \"SET_IMG\",\n                img,\n              },\n            ],\n          },\n        });\n      }\n    };\n\n    const onClickPrev = () => {\n      dispatch({ type: \"PREV_PROFILE\" });\n      switch (depth) {\n        case 2:\n          dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"group\" });\n          break;\n        case 1:\n          dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"home\" });\n          break;\n        default:\n          dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"home\" });\n          break;\n      }\n    };\n\n    useEffect(() => {\n      // Before loading show loading bar.\n      const imgLoad = new Image();\n      imgLoad.onload = function () {\n        setLoaded(true);\n      };\n      imgLoad.src =\n        type === \"home\"\n          ? `./img/${group}/group/0.jpg`\n          : type === \"group\"\n          ? `./img/${group}/${name}/0.jpg`\n          : `./img/${group}/${name}/${img}`;\n    }, [type, group, name, img]);\n\n    return (\n      <>\n        {type === \"prev\" ? (\n          <div className=\"prev\" onClick={onClickPrev}>\n            <img\n              src=\"./img/keyboard_arrow_left-white-18dp.svg\"\n              alt=\"이전으로\"\n            />\n          </div>\n        ) : loaded ? (\n          <div\n            onClick={onClick}\n            className={\n              type === \"home\"\n                ? \"profile group\"\n                : selected\n                ? \"profile selected\"\n                : \"profile\"\n            }\n          >\n            {selected && (\n              <>\n                <div className=\"icon\"></div>\n                <p className=\"selectedText\">selected</p>\n              </>\n            )}\n            <div\n              className=\"background\"\n              style={\n                type === \"home\"\n                  ? { backgroundImage: `url(./img/${group}/group/0.jpg)` }\n                  : type === \"group\"\n                  ? { backgroundImage: `url(./img/${group}/${name}/0.jpg)` }\n                  : { backgroundImage: `url(./img/${group}/${name}/${img})` }\n              }\n            ></div>\n            {sub && <p className=\"sub\">{sub}</p>}\n          </div>\n        ) : (\n          <div className=\"profile loading\">\n            <img src=\"./img/loop-white-18dp.svg\" alt=\"loading\" />\n          </div>\n        )}\n      </>\n    );\n  }\n);\n\nexport default Profile;\n","import groupData from \"../data/group.json\";\n\nconst initialState = {\n  // set initial state\n  name: \"group\",\n  dataJson: groupData as { [index: string]: any },\n  group: \"izone\",\n  img: \"0.jpg\",\n  selectedProfile: \"home\",\n  profile: [],\n  selectedImg: [{ group: \"izone\", name: \"group\", img: \"0.jpg\" }],\n  imgCtx: null,\n  imgCtxArr: [],\n  screenSize: [],\n  dotWrapperSize: [],\n  initDotsCount: [],\n  modalPopup: [],\n  maxDepth: 6,\n};\n\nexport default initialState;\n","const reducer = (state: any, action: any) => {\n  // set reducer\n  switch (action.type) {\n    case \"SET_PROFILE\":\n      return { ...state, profile: [...state.profile, action.status] };\n    case \"PREV_PROFILE\":\n      return { ...state, profile: [...state.profile.slice(0, -1)] };\n    case \"SET_NAME\":\n      return { ...state, name: action.name };\n    case \"SET_GROUP\":\n      return { ...state, group: action.group };\n    case \"SET_IMG\":\n      return { ...state, img: action.img };\n    case \"SET_IMG_CTX_ARR\":\n      return {\n        ...state,\n        imgCtx: { ctx: action.ctx, img: action.img },\n        imgCtxARR: {\n          ...state.imgCtx,\n          [action.name]: { ctx: action.ctx, img: action.img },\n        },\n      };\n    case \"SET_SCREEN_SIZE\":\n      return { ...state, screenSize: [...action.size] };\n    case \"SET_DOT_WRAPPER_SIZE\":\n      return { ...state, dotWrapperSize: [...action.size] };\n    case \"SET_INIT_DOTS_COUNT\":\n      return { ...state, initDotsCount: [...action.initDotsCount] };\n    case \"SET_MODAL_POPUP\":\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup, { ...action.modalPopup }],\n      };\n    case \"CANCEL_MODAL_POPUP\":\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup.slice(1)],\n      };\n    case \"OK_MODAL_POPUP\":\n      for (let i = 0; i < state.modalPopup[0].functions.length; i++) {\n        state.modalPopup[0].functions[i](state.modalPopup[0].args[i]);\n      }\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup.slice(1)],\n      };\n    case \"ADD_SELECTED_IMG\":\n      return {\n        ...state,\n        selectedImg: [\n          ...state.selectedImg,\n          { name: action.name, group: action.group, img: action.img },\n        ],\n      };\n    case \"SET_MAX_DEPTH\":\n      return {\n        ...state,\n        maxDepth: action.depth,\n      };\n    case \"SET_SELECTED_PROFILE\":\n      return {\n        ...state,\n        selectedProfile: action.select,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useRef, memo, useEffect, useReducer, useCallback } from \"react\";\nimport \"./reset.css\";\nimport \"./App.css\";\nimport Dot from \"./components/Dot\";\n\nimport getWidthHeight from \"./tools/getWidthHeight\";\nimport getDotsCount from \"./tools/getDotsCount\";\nimport ModalPopup from \"./components/ModalPopup\";\nimport CanvasImg from \"./components/CanvasImg\";\nimport Profile from \"./components/Profile\";\nimport initialState from \"./reducer/state\";\nimport reducer from \"./reducer/reducer\";\n\nconst App = memo(() => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const dotWrapperRef = useRef<HTMLDivElement>(null);\n  const dotSubWrapperRef = useRef<HTMLDivElement>(null);\n  const profileWrapperRef = useRef<HTMLDivElement>(null);\n  const eventRef = useRef<Event>(new CustomEvent(\"division\"));\n  const timeRef = useRef<any>(0);\n\n  const setDotWrapper = useCallback((width: number, height: number) => {\n    // set dot-wrapper size\n    if (dotWrapperRef.current && dotSubWrapperRef.current) {\n      const dotWrapper = dotWrapperRef.current;\n      const dotSubWrapper = dotSubWrapperRef.current;\n      dotWrapper.style.width = `${width}px`;\n      dotWrapper.style.height = `${height}px`;\n\n      dotSubWrapper.style.width = `${width}px`;\n      dotSubWrapper.style.height = `${width}px`;\n      dispatch({\n        type: \"SET_DOT_WRAPPER_SIZE\",\n        size: [width, height],\n      });\n    }\n  }, []);\n\n  const makeInitDots = useCallback((dotsCount: number) => {\n    // set initial dots\n    const initDotsCount = [];\n    for (let i = 0; i < dotsCount; i++) {\n      initDotsCount.push(i);\n    }\n    dispatch({\n      type: \"SET_INIT_DOTS_COUNT\",\n      initDotsCount,\n    });\n  }, []);\n\n  const onReSize = useCallback(() => {\n    // when window resies, set screen size state\n    dispatch({\n      type: \"SET_SCREEN_SIZE\",\n      size: [\n        document.documentElement.clientWidth,\n        document.documentElement.clientHeight,\n      ],\n    });\n  }, []);\n\n  const onTouchMove = useCallback((e: any) => {\n    // when touches move, dispatch event\n    const dots = [];\n    for (let i = 0; i < e.touches.length; i++) {\n      dots.push(\n        document.elementFromPoint(e.touches[i].clientX, e.touches[i].clientY)\n      );\n    }\n    for (let i = 0; i < dots.length; i++) {\n      const dot = dots[i];\n      if (dot && dot.classList.contains(\"dot\")) {\n        dot.dispatchEvent(eventRef.current);\n      }\n    }\n  }, []);\n\n  const onMouseMove = useCallback((e: any) => {\n    const dot = document.elementFromPoint(e.clientX, e.clientY);\n    if (dot && dot.classList.contains(\"dot\")) {\n      dot.dispatchEvent(eventRef.current);\n    }\n  }, []);\n\n  const getWidthHeightCB = useCallback(getWidthHeight, []);\n\n  useEffect(() => {\n    // set max depth state\n    if (state.dotWrapperSize[0] < 600) {\n      dispatch({ type: \"SET_MAX_DEPTH\", depth: 6 });\n    } else if (state.dotWrapperSize[0] >= 600) {\n      dispatch({ type: \"SET_MAX_DEPTH\", depth: 7 });\n    }\n  }, [state.dotWrapperSize]);\n\n  useEffect(() => {\n    // call setDotWrapper and makeInitDots for setting dot wrapper size state and initital dots count\n    if (state.imgCtx) {\n      const img = state.imgCtx.img;\n      const size = getWidthHeightCB(img, state.screenSize);\n      const dotsCount = getDotsCount(size, size.width / 2);\n      setDotWrapper(size.width, size.height);\n      makeInitDots(dotsCount);\n    }\n  }, [\n    state.screenSize,\n    state.imgCtx,\n    getWidthHeightCB,\n    setDotWrapper,\n    makeInitDots,\n  ]);\n\n  useEffect(() => {\n    // when click profile, rest profile wrapper scrollbar\n    profileWrapperRef.current?.scrollTo(0, 0);\n  }, [state.profile]);\n\n  useEffect(() => {\n    // when document is loaded, set screenSize state at once\n    onReSize();\n    const onReSizeDelay = () => {\n      timeRef.current && clearTimeout(timeRef.current);\n      timeRef.current = setTimeout(onReSize, 300);\n    };\n    window.addEventListener(\"resize\", onReSizeDelay);\n    window.addEventListener(\"touchmove\", onTouchMove);\n    window.addEventListener(\"mousemove\", onMouseMove);\n  }, [onMouseMove, onReSize, onTouchMove]);\n\n  return (\n    <>\n      <div id=\"canvas-wrapper\">\n        {state.selectedImg.map((item: any) => (\n          <CanvasImg\n            name={item.name}\n            group={item.group}\n            img={item.img}\n            key={`${item.group}/${item.name}/${item.img}`}\n            screenSize={state.screenSize}\n            dispatch={dispatch}\n          />\n        ))}\n      </div>\n      <div\n        id=\"main-wrapper\"\n        style={{\n          height: `${\n            state.screenSize[1] - (state.screenSize[0] > 600 ? 125 : 80) // set main wrapper height\n          }px`,\n        }}\n      >\n        <div ref={dotWrapperRef} id=\"dot-wrapper\">\n          <div ref={dotSubWrapperRef} id=\"dot-subwrapper\">\n            {state.initDotsCount.map((item: any) => (\n              <Dot\n                ctx={state.imgCtx.ctx}\n                key={item.toString()}\n                event={eventRef.current}\n                wrapperSize={state.dotWrapperSize}\n                depth={1}\n                maxDepth={state.maxDepth}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div id=\"profile-wrapper\" ref={profileWrapperRef}>\n        <div id=\"profile-slide\">\n          {state.selectedProfile !== \"home\" && ( // If selectedProfile state is not home then profile-slide has prev button\n            <Profile\n              type=\"prev\"\n              dispatch={dispatch}\n              depth={state.profile.length}\n            />\n          )}\n          {state.selectedProfile === \"home\"\n            ? state.dataJson.names.map((\n                item: any // If selectedprofile state is home then Profile component show group icon\n              ) => (\n                <Profile\n                  group={item}\n                  key={item}\n                  type={\"home\"}\n                  dispatch={dispatch}\n                  sub={item}\n                ></Profile>\n              ))\n            : state.selectedProfile === \"group\"\n            ? state.dataJson[state.profile[0]].member.map((\n                item: any // If selectedprofile state is group then Profile component show member icon\n              ) => (\n                <Profile\n                  group={state.profile[0]}\n                  name={item}\n                  key={item}\n                  type={\"group\"}\n                  dispatch={dispatch}\n                  imgs={state.dataJson[state.profile[0]].imgs[item]}\n                  sub={item}\n                />\n              ))\n            : state.dataJson[state.profile[0]].imgs[state.profile[1]] // If selectedprofile state is member then Profile component show person img\n                .map((item: any) => (\n                  <Profile\n                    name={state.profile[1]}\n                    img={item}\n                    group={state.profile[0]}\n                    key={item}\n                    type={\"member\"}\n                    selected={\n                      state.selectedImg[state.selectedImg.length - 1].name ===\n                        state.profile[1] &&\n                      state.selectedImg[state.selectedImg.length - 1].group ===\n                        state.profile[0] &&\n                      state.selectedImg[state.selectedImg.length - 1].img ===\n                        item\n                    }\n                    dispatch={dispatch}\n                  />\n                ))}\n        </div>\n      </div>\n      {state.modalPopup\n        ? state.modalPopup.map((\n            item: any,\n            index: any // If modalPopup has value then show ModalPopup component\n          ) => (\n            <ModalPopup\n              title={item.title}\n              description={item.description}\n              dispatch={dispatch}\n              key={item.title + index}\n            />\n          ))\n        : null}\n    </>\n  );\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}