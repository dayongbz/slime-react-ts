{"version":3,"sources":["components/Dot.tsx","tools/getWidthHeight.tsx","components/CanvasImg.tsx","components/CanvasImgWrapper.tsx","components/Profile.tsx","components/ProfileWrapper.tsx","tools/getDotsCount.tsx","components/ModalPopup.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Dot","memo","ctx","wrapperSize","event","depth","maxDepth","useState","dots","setDots","dotRef","useRef","onEvent","useCallback","current","classList","remove","add","useEffect","contains","dot","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","colorData","getImageData","data","style","backgroundColor","target","addEventListener","once","removeEventListener","ref","className","map","item","key","toString","getWidthHeight","img","screenSize","width","height","maxWidth","maxHeight","ratio","result","padding","document","documentElement","clientWidth","Math","floor","CanvasImg","name","dispatch","canvasRef","imgRef","setCanvas","canvas","getContext","drawImage","size","type","onLoad","e","alt","src","CanvasImgWrapper","member","id","Profile","select","onClick","modalPopup","title","description","functions","args","initDotsCount","backgroundImage","ProfileWrapper","getDotsCount","dotSize","ceil","ModalPopup","onCancel","value","initialState","imgCtx","selectedImg","dotWrapperSize","reducer","state","action","slice","i","length","App","useReducer","memberRef","dotWrapperRef","dotSubWrapperRef","eventRef","CustomEvent","timeRef","onReSize","clientHeight","onTouchMove","touches","push","elementFromPoint","clientX","clientY","dispatchEvent","dotsCount","imgWidth","imgHeight","dotWrapper","dotSubWrapper","setDotWrapper","makeInitDots","window","clearTimeout","setTimeout","index","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.59607f47.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState, memo, useCallback } from \"react\";\n\nconst Dot = memo(({ ctx, wrapperSize, event, depth, maxDepth }: any) => {\n  const [dots, setDots] = useState<Array<any>>([]);\n  const dotRef = useRef<HTMLDivElement>(null);\n\n  const onEvent = useCallback(() => {\n    // element what has dot class remove dot class then add wrapper class\n    dotRef.current?.classList.remove(\"dot\");\n    dotRef.current?.classList.add(\"wrapper\");\n    setDots([1, 2, 3, 4]);\n  }, []);\n\n  useEffect(() => {\n    // init dot setting\n    if (\n      dotRef.current &&\n      dotRef.current?.classList.contains(\"dot\") &&\n      ctx &&\n      wrapperSize\n    ) {\n      const dot = dotRef.current;\n      let x = dot.offsetLeft + dot.offsetWidth / 2,\n        y = dot.offsetTop + dot.offsetHeight / 2;\n      x = x < 0 ? 0 : x >= wrapperSize[0] ? wrapperSize[0] - 1 : x;\n      y = y < 0 ? 0 : y >= wrapperSize[1] ? wrapperSize[1] - 1 : y;\n      const colorData = ctx.getImageData(x, y, 1, 1).data;\n      dot.style.backgroundColor = `rgb(${colorData[0]},${colorData[1]},${colorData[2]})`;\n    }\n  }, [ctx, wrapperSize]);\n\n  useEffect(() => {\n    const target = dotRef.current;\n    if (target && target.classList.contains(\"dot\") && depth < maxDepth) {\n      target.addEventListener(\"mouseenter\", onEvent, { once: true });\n      target.addEventListener(\"division\", onEvent, { once: true });\n    }\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const target = dotRef.current;\n      if (target && target.classList.contains(\"dot\") && depth < maxDepth) {\n        target.removeEventListener(\"mouseenter\", onEvent);\n        target.removeEventListener(\"division\", onEvent);\n      }\n    };\n  }, [onEvent, depth, maxDepth]);\n\n  return (\n    <div ref={dotRef} className=\"dot\">\n      {dots.map((item) => {\n        return (\n          <Dot\n            key={item.toString()}\n            ctx={ctx}\n            event={event}\n            wrapperSize={wrapperSize}\n            depth={depth + 1}\n            maxDepth={maxDepth}\n          />\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Dot;\n","const getWidthHeight = (img: HTMLImageElement, screenSize: any): any => {\n  let { width, height } = img;\n  let [maxWidth, maxHeight] = screenSize;\n  const ratio = width >= height ? width / height : height / width;\n  const profileHeight = document.documentElement.clientWidth > 600 ? 125 : 80;\n  const padding = 10;\n  const result: any = { width: 0, height: 0 };\n  maxWidth = maxWidth - padding * 2;\n  maxHeight = maxHeight - padding * 2 - profileHeight;\n  if (width >= height) {\n    result.width = maxWidth;\n    result.height = maxWidth / ratio;\n    if (result.height > maxHeight) {\n      result.width = maxWidth - (result.height - maxHeight) * ratio;\n      result.height = maxHeight;\n    }\n  } else {\n    result.width = maxHeight / ratio;\n    result.height = maxHeight;\n    if (result.width > maxWidth) {\n      result.height = maxHeight - (result.width - maxWidth) * ratio;\n      result.width = maxWidth;\n    }\n  }\n  return {\n    width: Math.floor(result.width),\n    height: Math.floor(result.height),\n  };\n};\n\nexport default getWidthHeight;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport getWidthHeight from \"../tools/getWidthHeight\";\n\nconst CanvasImg = memo(({ name, screenSize, dispatch }: any) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  const setCanvas = (\n    // set canvas size and draw image and return ctx\n    canvas: HTMLCanvasElement,\n    img: HTMLImageElement,\n    width: number,\n    height: number\n  ): CanvasRenderingContext2D => {\n    const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    canvas.width = width;\n    canvas.height = height;\n    ctx.drawImage(img, 0, 0, width, height);\n    return ctx;\n  };\n\n  const onLoad = (e: any) => {\n    if (canvasRef.current && e.target) {\n      const canvas = canvasRef.current as HTMLCanvasElement;\n      const img = e.target;\n      const size = getWidthHeight(img, screenSize);\n      const ctx = setCanvas(canvas, img, size.width, size.height);\n      dispatch({ type: \"SET_IMG_CTX\", name, ctx, img });\n    }\n  };\n\n  useEffect(() => {\n    if (canvasRef.current && imgRef.current) {\n      const canvas = canvasRef.current as HTMLCanvasElement;\n      const img = imgRef.current;\n      const size = getWidthHeight(img, screenSize);\n      const ctx = setCanvas(canvas, img, size.width, size.height);\n      dispatch({ type: \"SET_IMG_CTX\", name, ctx, img });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [screenSize, name]);\n\n  return (\n    <div className={`${name}-wrapper`}>\n      <img\n        ref={imgRef}\n        onLoad={onLoad}\n        className={name}\n        alt={name}\n        src={`./img/izone/${name}0.jpg`}\n      />\n      <canvas ref={canvasRef} className={name}></canvas>\n    </div>\n  );\n});\n\nexport default CanvasImg;\n","import React, { memo } from \"react\";\nimport CanvasImg from \"./CanvasImg\";\n\nconst CanvasImgWrapper = memo(({ member, screenSize, dispatch }: any) => {\n  return (\n    <div id=\"canvas-wrapper\">\n      {member.map((item: string) => {\n        return (\n          <CanvasImg\n            name={item}\n            key={item}\n            screenSize={screenSize}\n            dispatch={dispatch}\n          />\n        );\n      })}\n    </div>\n  );\n});\n\nexport default CanvasImgWrapper;\n","import React, { memo } from \"react\";\n\nconst Profile = memo(({ name, dispatch, select }: any) => {\n  const onClick = (e: any) => {\n    dispatch({\n      type: \"ADD_SELECTED_IMG\",\n      name,\n    });\n    if (!select) {\n      dispatch({\n        type: \"SET_MODAL_POPUP\",\n        modalPopup: {\n          title: \"경고\",\n          description: \"지금까지 작업한 내용들이 초기화됩니다.\",\n          functions: [dispatch, dispatch],\n          args: [\n            {\n              type: \"SET_INIT_DOTS_COUNT\",\n              initDotsCount: [],\n            },\n            { type: \"SET_NAME\", name },\n          ],\n        },\n      });\n    }\n  };\n  return (\n    <>\n      <div\n        onClick={onClick}\n        className={select ? \"profile selected\" : \"profile\"}\n        style={{ backgroundImage: `url(./img/izone/${name}0.jpg)` }}\n      ></div>\n    </>\n  );\n});\n\nexport default Profile;\n","import React, { memo } from \"react\";\nimport Profile from \"./Profile\";\n\nconst ProfileWrapper = memo(({ member, dispatch, name }: any) => {\n  return (\n    <div id=\"profile-wrapper\">\n      <div id=\"profile-slide\">\n        {member.map((item: any) => (\n          <Profile\n            name={item}\n            key={item}\n            dispatch={dispatch}\n            select={item === name}\n          ></Profile>\n        ))}\n      </div>\n    </div>\n  );\n});\n\nexport default ProfileWrapper;\n","const getDotsCount = (size: any, dotSize: number): number => {\n  const { height } = size;\n  return Math.ceil(height / dotSize) * 2;\n};\n\nexport default getDotsCount;\n","import React, { memo } from \"react\";\n\nconst ModalPopup = memo(({ title, description, dispatch }: any) => {\n  const onCancel = () => {\n    dispatch({\n      type: \"CANCEL_MODAL_POPUP\",\n    });\n  };\n\n  const onOk = () => {\n    dispatch({\n      type: \"OK_MODAL_POPUP\",\n    });\n  };\n  return (\n    <div id=\"modal-popup-wrapper\">\n      <div className=\"modal-popup\">\n        <div className=\"title-wrapper\">\n          <p className=\"title\">{title}</p>\n        </div>\n        <div className=\"description-wrapper\">\n          <p className=\"sub\">{description}</p>\n        </div>\n        <div className=\"button-wrapper\">\n          <input type=\"button\" value=\"예\" onClick={onOk} />\n          <input type=\"button\" value=\"아니오\" onClick={onCancel} />\n        </div>\n      </div>\n      <div className=\"background\" onClick={onCancel}></div>\n    </div>\n  );\n});\n\nexport default ModalPopup;\n","import React, { useRef, memo, useEffect, useReducer } from \"react\";\nimport \"./reset.css\";\nimport \"./App.css\";\nimport Dot from \"./components/Dot\";\nimport CanvasImgWrapper from \"./components/CanvasImgWrapper\";\nimport ProfileWrapper from \"./components/ProfileWrapper\";\nimport getWidthHeight from \"./tools/getWidthHeight\";\nimport getDotsCount from \"./tools/getDotsCount\";\nimport ModalPopup from \"./components/ModalPopup\";\n\nconst initialState = {\n  name: \"kimchaewon\",\n  imgCtx: {},\n  selectedImg: [\"kimchaewon\"],\n  screenSize: [0, 0],\n  dotWrapperSize: [0, 0],\n  initDotsCount: [],\n  modalPopup: [],\n  maxDepth: 6,\n};\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"SET_NAME\":\n      return { ...state, name: action.name };\n    case \"SET_IMG_CTX\":\n      return {\n        ...state,\n        imgCtx: {\n          ...state.imgCtx,\n          [action.name]: { ctx: action.ctx, img: action.img },\n        },\n      };\n    case \"SET_SCREEN_SIZE\":\n      return { ...state, screenSize: [...action.size] };\n    case \"SET_DOT_WRAPPER_SIZE\":\n      return { ...state, dotWrapperSize: [...action.size] };\n    case \"SET_INIT_DOTS_COUNT\":\n      return { ...state, initDotsCount: [...action.initDotsCount] };\n    case \"SET_MODAL_POPUP\":\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup, { ...action.modalPopup }],\n      };\n    case \"CANCEL_MODAL_POPUP\":\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup.slice(1)],\n      };\n    case \"OK_MODAL_POPUP\":\n      for (let i = 0; i < state.modalPopup[0].functions.length; i++) {\n        state.modalPopup[0].functions[i](state.modalPopup[0].args[i]);\n      }\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup.slice(1)],\n      };\n    case \"ADD_SELECTED_IMG\":\n      return {\n        ...state,\n        selectedImg: [...state.selectedImg, action.name],\n      };\n    case \"SET_MAX_DEPTH\":\n      return {\n        ...state,\n        maxDepth: action.depth,\n      };\n    default:\n      return state;\n  }\n};\n\nconst App = memo(() => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const memberRef = useRef<Array<string>>([\n    \"kwoneunbi\",\n    \"sakura\",\n    \"kanghyewon\",\n    \"choiyena\",\n    \"leechaeyeon\",\n    \"kimchaewon\",\n    \"kimminju\",\n    \"nako\",\n    \"hitomi\",\n    \"joyuri\",\n    \"anyujin\",\n    \"jangwonyoung\",\n  ]);\n  const dotWrapperRef = useRef<HTMLDivElement>(null);\n  const dotSubWrapperRef = useRef<HTMLDivElement>(null);\n  const eventRef = useRef<Event>(new CustomEvent(\"division\"));\n  const timeRef = useRef<any>(0);\n\n  const setDotWrapper = (imgWidth: number, imgHeight: number) => {\n    // set dot-wrapper size\n    if (dotWrapperRef.current && dotSubWrapperRef.current) {\n      const dotWrapper = dotWrapperRef.current;\n      const dotSubWrapper = dotSubWrapperRef.current;\n      dotWrapper.style.width = `${imgWidth}px`;\n      dotWrapper.style.height = `${imgHeight}px`;\n\n      dotSubWrapper.style.width = `${imgWidth}px`;\n      dotSubWrapper.style.height = `${imgWidth}px`;\n      dispatch({\n        type: \"SET_DOT_WRAPPER_SIZE\",\n        size: [imgWidth, imgHeight],\n      });\n    }\n  };\n\n  const makeInitDots = (dotsCount: number) => {\n    const initDotsCount = [];\n    for (let i = 0; i < dotsCount; i++) {\n      initDotsCount.push(i);\n    }\n    dispatch({\n      type: \"SET_INIT_DOTS_COUNT\",\n      initDotsCount,\n    });\n  };\n\n  const onReSize = () => {\n    dispatch({\n      type: \"SET_SCREEN_SIZE\",\n      size: [\n        document.documentElement.clientWidth,\n        document.documentElement.clientHeight,\n      ],\n    });\n  };\n\n  const onTouchMove = (e: any) => {\n    const dots = [];\n    for (let i = 0; i < e.touches.length; i++) {\n      dots.push(\n        document.elementFromPoint(e.touches[i].clientX, e.touches[i].clientY)\n      );\n    }\n    for (let i = 0; i < dots.length; i++) {\n      const dot = dots[i];\n      if (dot && dot.classList.contains(\"dot\")) {\n        dot.dispatchEvent(eventRef.current);\n        dot.classList.add(\"hello\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (state.screenSize[0] < 600) {\n      dispatch({ type: \"SET_MAX_DEPTH\", depth: 6 });\n    } else if (state.screenSize[0] >= 600) {\n      dispatch({ type: \"SET_MAX_DEPTH\", depth: 7 });\n    }\n  }, [state.screenSize]);\n\n  useEffect(() => {\n    if (state.imgCtx[state.name]) {\n      const img = state.imgCtx[state.name].img;\n      const size = getWidthHeight(img, state.screenSize);\n      const dotsCount = getDotsCount(size, size.width / 2);\n      setDotWrapper(size.width, size.height);\n      makeInitDots(dotsCount);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.imgCtx[state.name], state.name, state.screenSize]);\n\n  useEffect(() => {\n    // when document is loaded, set screenSize state at once\n    onReSize();\n    const onReSizeDelay = () => {\n      timeRef.current && clearTimeout(timeRef.current);\n      timeRef.current = setTimeout(onReSize, 300);\n    };\n    window.addEventListener(\"resize\", onReSizeDelay);\n    window.addEventListener(\"touchmove\", onTouchMove);\n  }, []);\n\n  return (\n    <>\n      <CanvasImgWrapper\n        member={state.selectedImg}\n        screenSize={state.screenSize}\n        dispatch={dispatch}\n      />\n      <div\n        id=\"main-wrapper\"\n        style={{\n          height: `${\n            document.documentElement.clientHeight -\n            (document.documentElement.clientWidth > 600 ? 125 : 80)\n          }px`,\n        }}\n      >\n        <div ref={dotWrapperRef} id=\"dot-wrapper\">\n          <div ref={dotSubWrapperRef} id=\"dot-subwrapper\">\n            {state.initDotsCount.map((item: any, index: number) => (\n              <Dot\n                ctx={state.imgCtx[state.name].ctx}\n                key={item.toString()}\n                event={eventRef.current}\n                wrapperSize={state.dotWrapperSize}\n                depth={1}\n                maxDepth={state.maxDepth}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <ProfileWrapper\n        member={memberRef.current}\n        dispatch={dispatch}\n        name={state.name}\n      />\n      {state.modalPopup\n        ? state.modalPopup.map((item: any, index: any) => (\n            <ModalPopup\n              title={item.title}\n              description={item.description}\n              dispatch={dispatch}\n              key={item.title + index}\n            />\n          ))\n        : null}\n    </>\n  );\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}