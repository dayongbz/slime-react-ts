{"version":3,"sources":["components/Dot.tsx","tools/getWidthHeight.tsx","tools/getDotsCount.tsx","components/ModalPopup.tsx","components/CanvasImg.tsx","components/Profile.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Dot","memo","ctx","wrapperSize","event","depth","maxDepth","useState","dots","setDots","dotRef","useRef","onEvent","useCallback","current","classList","remove","add","useEffect","target","status","contains","addEventListener","once","removeEventListener","dot","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","colorData","getImageData","data","style","backgroundColor","ref","className","map","item","key","toString","getWidthHeight","img","screenSize","width","height","maxWidth","maxHeight","ratio","result","padding","document","documentElement","clientWidth","Math","floor","getDotsCount","size","dotSize","ceil","ModalPopup","title","description","dispatch","onCancel","type","id","value","onClick","CanvasImg","name","group","canvasRef","imgRef","setCanvas","canvas","getContext","drawImage","imgT","onLoad","e","alt","src","Profile","sub","selected","imgs","loaded","setLoaded","imgLoad","Image","onload","select","modalPopup","functions","args","initDotsCount","backgroundImage","initialState","dataJson","selectedProfile","profile","selectedImg","imgCtx","imgCtxArr","dotWrapperSize","reducer","state","action","slice","imgCtxARR","i","length","App","useReducer","dotWrapperRef","dotSubWrapperRef","eventRef","CustomEvent","timeRef","onReSize","clientHeight","onTouchMove","touches","push","elementFromPoint","clientX","clientY","dispatchEvent","dotsCount","imgWidth","imgHeight","dotWrapper","dotSubWrapper","setDotWrapper","makeInitDots","window","clearTimeout","setTimeout","index","names","member","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60f20383.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState, memo, useCallback } from \"react\";\n\nconst Dot = memo(({ ctx, wrapperSize, event, depth, maxDepth }: any) => {\n  const [dots, setDots] = useState<Array<any>>([]);\n  const dotRef = useRef<HTMLDivElement>(null);\n\n  const onEvent = useCallback(() => {\n    // element what has dot class remove dot class then add wrapper class\n    dotRef.current?.classList.remove(\"dot\");\n    dotRef.current?.classList.add(\"wrapper\");\n    setDots([1, 2, 3, 4]);\n  }, []);\n\n  useEffect(() => {\n    const target = dotRef.current;\n    const status = target?.classList.contains(\"dot\");\n    if (target && status && depth < maxDepth) {\n      target.addEventListener(\"mouseenter\", onEvent, { once: true });\n      target.addEventListener(\"division\", onEvent, { once: true });\n    }\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      if (target && status && depth < maxDepth) {\n        target.removeEventListener(\"mouseenter\", onEvent);\n        target.removeEventListener(\"division\", onEvent);\n      }\n    };\n  }, [onEvent, depth, maxDepth]);\n\n  useEffect(() => {\n    const target = dotRef.current;\n    if (depth === maxDepth && target?.classList.contains(\"wrapper\")) {\n      setDots([]);\n      target.classList.add(\"dot\");\n      target.classList.remove(\"wrapper\");\n    }\n  }, [depth, maxDepth]);\n\n  useEffect(() => {\n    // init dot setting\n    if (\n      dotRef.current &&\n      dotRef.current.classList.contains(\"dot\") &&\n      ctx &&\n      wrapperSize\n    ) {\n      const dot = dotRef.current;\n      let x = dot.offsetLeft + dot.offsetWidth / 2,\n        y = dot.offsetTop + dot.offsetHeight / 2;\n      x = x < 0 ? 0 : x >= wrapperSize[0] ? wrapperSize[0] - 1 : x;\n      y = y < 0 ? 0 : y >= wrapperSize[1] ? wrapperSize[1] - 1 : y;\n      const colorData = ctx.getImageData(x, y, 1, 1).data;\n      dot.style.backgroundColor = `rgb(${colorData[0]},${colorData[1]},${colorData[2]})`;\n    }\n  }, [ctx, wrapperSize]);\n\n  return (\n    <div ref={dotRef} className=\"dot\">\n      {dots &&\n        dots.map((item) => {\n          return (\n            <Dot\n              key={item.toString()}\n              ctx={ctx}\n              event={event}\n              wrapperSize={wrapperSize}\n              depth={depth + 1}\n              maxDepth={maxDepth}\n            />\n          );\n        })}\n    </div>\n  );\n});\n\nexport default Dot;\n","const getWidthHeight = (img: HTMLImageElement, screenSize: any): any => {\n  let { width, height } = img;\n  let [maxWidth, maxHeight] = screenSize;\n  const ratio = width >= height ? width / height : height / width;\n  const profileHeight = document.documentElement.clientWidth > 600 ? 125 : 80;\n  const padding = 10;\n  const result: any = { width: 0, height: 0 };\n  maxWidth = maxWidth - padding * 2;\n  maxHeight = maxHeight - padding * 2 - profileHeight;\n  if (width >= height) {\n    result.width = maxWidth;\n    result.height = maxWidth / ratio;\n    if (result.height > maxHeight) {\n      result.width = maxWidth - (result.height - maxHeight) * ratio;\n      result.height = maxHeight;\n    }\n  } else {\n    result.width = maxHeight / ratio;\n    result.height = maxHeight;\n    if (result.width > maxWidth) {\n      result.height = maxHeight - (result.width - maxWidth) * ratio;\n      result.width = maxWidth;\n    }\n  }\n  return {\n    width: Math.floor(result.width),\n    height: Math.floor(result.height),\n  };\n};\n\nexport default getWidthHeight;\n","const getDotsCount = (size: any, dotSize: number): number => {\n  const { height } = size;\n  return Math.ceil(height / dotSize) * 2;\n};\n\nexport default getDotsCount;\n","import React, { memo } from \"react\";\n\nconst ModalPopup = memo(({ title, description, dispatch }: any) => {\n  const onCancel = () => {\n    dispatch({\n      type: \"CANCEL_MODAL_POPUP\",\n    });\n  };\n\n  const onOk = () => {\n    dispatch({\n      type: \"OK_MODAL_POPUP\",\n    });\n  };\n  return (\n    <div id=\"modal-popup-wrapper\">\n      <div className=\"modal-popup\">\n        <div className=\"title-wrapper\">\n          <p className=\"title\">{title}</p>\n        </div>\n        <div className=\"description-wrapper\">\n          <p className=\"sub\">{description}</p>\n        </div>\n        <div className=\"button-wrapper\">\n          <input type=\"button\" value=\"예\" onClick={onOk} />\n          <input type=\"button\" value=\"아니오\" onClick={onCancel} />\n        </div>\n      </div>\n      <div className=\"background\" onClick={onCancel}></div>\n    </div>\n  );\n});\n\nexport default ModalPopup;\n","import React, { memo, useRef, useEffect } from \"react\";\nimport getWidthHeight from \"../tools/getWidthHeight\";\n\nconst CanvasImg = memo(({ name, group, img, screenSize, dispatch }: any) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  const setCanvas = (\n    // set canvas size and draw image and return ctx\n    canvas: HTMLCanvasElement,\n    img: HTMLImageElement,\n    width: number,\n    height: number\n  ): CanvasRenderingContext2D => {\n    const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    canvas.width = width;\n    canvas.height = height;\n    ctx.drawImage(img, 0, 0, width, height);\n    return ctx;\n  };\n\n  const onLoad = (e: any) => {\n    if (canvasRef.current && e.target) {\n      const canvas = canvasRef.current as HTMLCanvasElement;\n      const imgT = e.target;\n      const size = getWidthHeight(imgT, screenSize);\n      const ctx = setCanvas(canvas, imgT, size.width, size.height);\n      dispatch({\n        type: \"SET_IMG_CTX_ARR\",\n        name: `${group}/${name}/${img}`,\n        ctx,\n        img: imgT,\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (canvasRef.current && imgRef.current) {\n      const canvas = canvasRef.current as HTMLCanvasElement;\n      const imgT = imgRef.current;\n      const size = getWidthHeight(imgT, screenSize);\n      const ctx = setCanvas(canvas, imgT, size.width, size.height);\n      dispatch({\n        type: \"SET_IMG_CTX\",\n        name: `${group}/${name}/${img}`,\n        ctx,\n        img: imgT,\n      });\n    }\n  }, [dispatch, group, img, name, screenSize]);\n\n  return (\n    <div className={`${name}-wrapper`}>\n      <img\n        ref={imgRef}\n        onLoad={onLoad}\n        className={`name/${img} none`}\n        alt={name}\n        src={`./img/${group}/${name}/${img}`}\n      />\n      <canvas ref={canvasRef} className={name}></canvas>\n    </div>\n  );\n});\n\nexport default CanvasImg;\n","import React, { memo, useEffect, useState } from \"react\";\n\nconst Profile = memo(\n  ({ name, dispatch, type, group, img, sub, depth, selected, imgs }: any) => {\n    const [loaded, setLoaded] = useState(false);\n\n    const onClick = (e: any) => {\n      if (type === \"home\") {\n        dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"group\" });\n        dispatch({ type: \"SET_PROFILE\", status: group });\n      }\n      if (type === \"group\") {\n        dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"member\" });\n        dispatch({ type: \"SET_PROFILE\", status: name });\n      }\n      if (type === \"member\" && !selected) {\n        dispatch({\n          type: \"SET_MODAL_POPUP\",\n          modalPopup: {\n            title: \"경고\",\n            description: \"지금까지 작업한 내용들이 초기화됩니다.\",\n            functions: [dispatch, dispatch, dispatch, dispatch, dispatch],\n            args: [\n              {\n                type: \"ADD_SELECTED_IMG\",\n                name,\n                group,\n                img,\n              },\n              {\n                type: \"SET_INIT_DOTS_COUNT\",\n                initDotsCount: [],\n              },\n              { type: \"SET_GROUP\", group },\n              { type: \"SET_NAME\", name },\n              {\n                type: \"SET_IMG\",\n                img,\n              },\n            ],\n          },\n        });\n      }\n    };\n\n    const onClickPrev = () => {\n      dispatch({ type: \"PREV_PROFILE\" });\n      switch (depth) {\n        case 3:\n          dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"group\" });\n          break;\n        case 2:\n          dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"group\" });\n          break;\n        case 1:\n          dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"home\" });\n          break;\n        default:\n          dispatch({ type: \"SET_SELECTED_PROFILE\", select: \"home\" });\n          break;\n      }\n    };\n\n    useEffect(() => {\n      const imgLoad = new Image();\n      imgLoad.onload = function () {\n        setLoaded(true);\n      };\n      imgLoad.src =\n        type === \"home\"\n          ? `./img/${group}/group/0.jpg`\n          : type === \"group\"\n          ? `./img/${group}/${name}/0.jpg`\n          : `./img/${group}/${name}/${img}`;\n    }, [type, group, name, img]);\n\n    return (\n      <>\n        {type === \"prev\" ? (\n          <div className=\"prev\" onClick={onClickPrev}>\n            <img\n              src=\"./img/keyboard_arrow_left-white-18dp.svg\"\n              alt=\"이전으로\"\n            />\n          </div>\n        ) : loaded ? (\n          <div\n            onClick={onClick}\n            className={type === \"home\" ? \"profile group\" : \"profile\"}\n          >\n            <div\n              className=\"background\"\n              style={\n                type === \"home\"\n                  ? { backgroundImage: `url(./img/${group}/group/0.jpg)` }\n                  : type === \"group\"\n                  ? { backgroundImage: `url(./img/${group}/${name}/0.jpg)` }\n                  : { backgroundImage: `url(./img/${group}/${name}/${img})` }\n              }\n            ></div>\n            <p className=\"sub\">{sub}</p>\n          </div>\n        ) : (\n          <div className=\"profile loading\">\n            <img src=\"./img/loop-white-18dp.svg\" alt=\"loading\" />\n          </div>\n        )}\n      </>\n    );\n  }\n);\n\nexport default Profile;\n","import React, { useRef, memo, useEffect, useReducer } from \"react\";\nimport \"./reset.css\";\nimport \"./App.css\";\nimport Dot from \"./components/Dot\";\n\nimport getWidthHeight from \"./tools/getWidthHeight\";\nimport getDotsCount from \"./tools/getDotsCount\";\nimport ModalPopup from \"./components/ModalPopup\";\nimport CanvasImg from \"./components/CanvasImg\";\nimport Profile from \"./components/Profile\";\n\nimport groupData from \"./data/group.json\";\n\nconst initialState = {\n  name: \"group\",\n  dataJson: groupData as { [index: string]: any },\n  group: \"izone\",\n  img: \"0.jpg\",\n  selectedProfile: \"home\",\n  profile: [],\n  selectedImg: [{ group: \"izone\", name: \"group\", img: \"0.jpg\" }],\n  imgCtx: null,\n  imgCtxArr: [],\n  screenSize: [],\n  dotWrapperSize: [],\n  initDotsCount: [],\n  modalPopup: [],\n  maxDepth: 6,\n};\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"SET_PROFILE\":\n      return { ...state, profile: [...state.profile, action.status] };\n    case \"PREV_PROFILE\":\n      return { ...state, profile: [...state.profile.slice(0, -1)] };\n    case \"SET_NAME\":\n      return { ...state, name: action.name };\n    case \"SET_GROUP\":\n      return { ...state, group: action.group };\n    case \"SET_IMG\":\n      return { ...state, img: action.img };\n    case \"SET_IMG_CTX_ARR\":\n      return {\n        ...state,\n        imgCtx: { ctx: action.ctx, img: action.img },\n        imgCtxARR: {\n          ...state.imgCtx,\n          [action.name]: { ctx: action.ctx, img: action.img },\n        },\n      };\n    case \"SET_SCREEN_SIZE\":\n      return { ...state, screenSize: [...action.size] };\n    case \"SET_DOT_WRAPPER_SIZE\":\n      return { ...state, dotWrapperSize: [...action.size] };\n    case \"SET_INIT_DOTS_COUNT\":\n      return { ...state, initDotsCount: [...action.initDotsCount] };\n    case \"SET_MODAL_POPUP\":\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup, { ...action.modalPopup }],\n      };\n    case \"CANCEL_MODAL_POPUP\":\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup.slice(1)],\n      };\n    case \"OK_MODAL_POPUP\":\n      for (let i = 0; i < state.modalPopup[0].functions.length; i++) {\n        state.modalPopup[0].functions[i](state.modalPopup[0].args[i]);\n      }\n      return {\n        ...state,\n        modalPopup: [...state.modalPopup.slice(1)],\n      };\n    case \"ADD_SELECTED_IMG\":\n      return {\n        ...state,\n        selectedImg: [\n          ...state.selectedImg,\n          { name: action.name, group: action.group, img: action.img },\n        ],\n      };\n    case \"SET_MAX_DEPTH\":\n      return {\n        ...state,\n        maxDepth: action.depth,\n      };\n    case \"SET_SELECTED_PROFILE\":\n      return {\n        ...state,\n        selectedProfile: action.select,\n      };\n    default:\n      return state;\n  }\n};\n\nconst App = memo(() => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const dotWrapperRef = useRef<HTMLDivElement>(null);\n  const dotSubWrapperRef = useRef<HTMLDivElement>(null);\n  const eventRef = useRef<Event>(new CustomEvent(\"division\"));\n  const timeRef = useRef<any>(0);\n\n  const setDotWrapper = (imgWidth: number, imgHeight: number) => {\n    // set dot-wrapper size\n    if (dotWrapperRef.current && dotSubWrapperRef.current) {\n      const dotWrapper = dotWrapperRef.current;\n      const dotSubWrapper = dotSubWrapperRef.current;\n      dotWrapper.style.width = `${imgWidth}px`;\n      dotWrapper.style.height = `${imgHeight}px`;\n\n      dotSubWrapper.style.width = `${imgWidth}px`;\n      dotSubWrapper.style.height = `${imgWidth}px`;\n      dispatch({\n        type: \"SET_DOT_WRAPPER_SIZE\",\n        size: [imgWidth, imgHeight],\n      });\n    }\n  };\n\n  const makeInitDots = (dotsCount: number) => {\n    const initDotsCount = [];\n    for (let i = 0; i < dotsCount; i++) {\n      initDotsCount.push(i);\n    }\n    dispatch({\n      type: \"SET_INIT_DOTS_COUNT\",\n      initDotsCount,\n    });\n  };\n\n  const onReSize = () => {\n    dispatch({\n      type: \"SET_SCREEN_SIZE\",\n      size: [\n        document.documentElement.clientWidth,\n        document.documentElement.clientHeight,\n      ],\n    });\n  };\n\n  const onTouchMove = (e: any) => {\n    const dots = [];\n    for (let i = 0; i < e.touches.length; i++) {\n      dots.push(\n        document.elementFromPoint(e.touches[i].clientX, e.touches[i].clientY)\n      );\n    }\n    for (let i = 0; i < dots.length; i++) {\n      const dot = dots[i];\n      if (dot && dot.classList.contains(\"dot\")) {\n        dot.dispatchEvent(eventRef.current);\n        dot.classList.add(\"hello\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (state.screenSize[0] < 600) {\n      dispatch({ type: \"SET_MAX_DEPTH\", depth: 6 });\n    } else if (state.screenSize[0] >= 600) {\n      dispatch({ type: \"SET_MAX_DEPTH\", depth: 7 });\n    }\n  }, [state.screenSize]);\n\n  useEffect(() => {\n    if (state.imgCtx) {\n      const img = state.imgCtx.img;\n      const size = getWidthHeight(img, state.screenSize);\n      const dotsCount = getDotsCount(size, size.width / 2);\n      setDotWrapper(size.width, size.height);\n      makeInitDots(dotsCount);\n    }\n  }, [state.screenSize, state.imgCtx]);\n\n  useEffect(() => {\n    // when document is loaded, set screenSize state at once\n    onReSize();\n    const onReSizeDelay = () => {\n      timeRef.current && clearTimeout(timeRef.current);\n      timeRef.current = setTimeout(onReSize, 300);\n    };\n    window.addEventListener(\"resize\", onReSizeDelay);\n    window.addEventListener(\"touchmove\", onTouchMove);\n  }, []);\n\n  return (\n    <>\n      <div id=\"canvas-wrapper\">\n        {state.selectedImg.map((item: any) => (\n          <CanvasImg\n            name={item.name}\n            group={item.group}\n            img={item.img}\n            key={`${item.group}/${item.name}/${item.img}`}\n            screenSize={state.screenSize}\n            dispatch={dispatch}\n          />\n        ))}\n      </div>\n      <div\n        id=\"main-wrapper\"\n        style={{\n          height: `${\n            state.screenSize[1] - (state.screenSize[0] > 600 ? 125 : 80)\n          }px`,\n        }}\n      >\n        <div ref={dotWrapperRef} id=\"dot-wrapper\">\n          <div ref={dotSubWrapperRef} id=\"dot-subwrapper\">\n            {state.initDotsCount.map((item: any, index: number) => (\n              <Dot\n                ctx={state.imgCtx.ctx}\n                key={item.toString()}\n                event={eventRef.current}\n                wrapperSize={state.dotWrapperSize}\n                depth={1}\n                maxDepth={state.maxDepth}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div id=\"profile-wrapper\">\n        <div id=\"profile-slide\">\n          {state.selectedProfile !== \"home\" && (\n            <Profile\n              type=\"prev\"\n              dispatch={dispatch}\n              depth={state.profile.length}\n            />\n          )}\n          {state.selectedProfile === \"home\"\n            ? state.dataJson.names.map((item: any) => (\n                <Profile\n                  group={item}\n                  key={item}\n                  type={\"home\"}\n                  dispatch={dispatch}\n                  sub={item}\n                ></Profile>\n              ))\n            : state.selectedProfile === \"group\"\n            ? state.dataJson[state.profile[0]].member.map((item: any) => (\n                <Profile\n                  group={state.profile[0]}\n                  name={item}\n                  key={item}\n                  type={\"group\"}\n                  dispatch={dispatch}\n                  imgs={state.dataJson[state.profile[0]].imgs[item]}\n                  sub={item}\n                />\n              ))\n            : state.dataJson[state.profile[0]].imgs[\n                state.profile[1]\n              ].map((item: any) => (\n                <Profile\n                  name={state.profile[1]}\n                  img={item}\n                  group={state.profile[0]}\n                  key={item}\n                  type={\"member\"}\n                  selected={\n                    state.selectedImg[state.selectedImg.length - 1].name ===\n                      state.profile[1] &&\n                    state.selectedImg[state.selectedImg.length - 1].group ===\n                      state.profile[0] &&\n                    state.selectedImg[state.selectedImg.length - 1].img === item\n                  }\n                  dispatch={dispatch}\n                />\n              ))}\n        </div>\n      </div>\n      {state.modalPopup\n        ? state.modalPopup.map((item: any, index: any) => (\n            <ModalPopup\n              title={item.title}\n              description={item.description}\n              dispatch={dispatch}\n              key={item.title + index}\n            />\n          ))\n        : null}\n    </>\n  );\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}